/*
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.formatting2

import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import uRDF.Joint
import uRDF.Link
import uRDF.Robot

class DslFormatter extends AbstractFormatter2 {
	


	def dispatch void format(Robot robot, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc.
		robot.append[newLine]
		//prepend(ISemanticRegion semanticRegion, Procedures.Procedure1<IHiddenRegionFormatter> before) 
		
		robot.regionFor.keyword("Link").prepend[setSpace("    ")]
		robot.regionFor.keyword("Joint").prepend[setSpace("    ")]
		
		for (Link link : robot.getLink()) {
			//link.format;
			//link.append[setNewLines(1)]
			//link.append[indent]			
		}
		for (Joint joint : robot.getJoint()) {
			joint.append[setNewLines(1)]
		}
		

		robot.regionFor.keyword("ID").surround[oneSpace]
	}

//	def dispatch void format(Link link, extension IFormattableDocument document) {
//		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		for (Inertial inertial : link.getInertial()) {
//			inertial.format;
//			
//		}
//		for (Visual visuals : link.getVisuals()) {
//			visuals.format;
//			visuals.append[setNewLines(1)]
//			
//		}
//		for (Collision collision : link.getCollision()) {
//			collision.format;
//		}
//	}
	
	// TODO: implement for Joint, Inertial, Visual, Collision
}
