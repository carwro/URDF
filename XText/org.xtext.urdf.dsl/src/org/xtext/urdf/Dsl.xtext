
grammar org.xtext.urdf.Dsl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

import "http://www.example.org/uRDF" as uRDF

/*
 * Todo: 
 * Expressions
 * Defaults
 * ReUse
 * Constants
 */



Robot returns uRDF::Robot:
		'RobotName' name=ID
		 link+=Link+  
		 joint+=Joint* 
;

Material returns uRDF::Material:
	Color | Texture;

Geometry returns uRDF::Geometry:
	Box | Cylinder | Mesh | Sphere;

Link returns uRDF::Link:
	{uRDF::Link}
		'Link' name=ID
		inertial+=Inertial*
		visuals+=Visual*
		collision+=Collision*
;

Joint returns uRDF::Joint:
		'Joint' name=ID
		Type=JointType
		 ChildOf=[uRDF::Link|STRING]
		 ParentOf=[uRDF::Link|STRING]
		(limit=Limit)?
		(axis=Axis)?
		 origin=Origin
		(calibration=Calibration)?
		(dynamics=Dynamics)?
		(mimic=Mimic)?
		(safetycontroller=SafetyController)?
;

Inertial returns uRDF::Inertial:
		origin=Origin
		mass=Mass
		inertia=Inertia
;

Visual returns uRDF::Visual:
		(material=Material)?
		origin=Origin
		geometry=Geometry
;

Collision returns uRDF::Collision:
		geometry=Geometry
		origin=Origin
;

Origin returns uRDF::Origin:
	{uRDF::Origin}
	 'Origin'
		(x=FLOAT)?
		(y=FLOAT)?
		(z=FLOAT)?
		(roll=FLOAT)?
		(pitch=FLOAT)?
		(yaw=FLOAT)?
;

Mass returns uRDF::Mass:
	{uRDF::Mass}
	'Mass'
	;

Inertia returns uRDF::Inertia:
	{uRDF::Inertia}
	'Inertia'
	;


Color returns uRDF::Color:
	/* RGBA values between 0 and 1 */
	{uRDF::Color}
	'Color'
	;

Texture returns uRDF::Texture:
	{uRDF::Texture}
	'Texture'
	;

Box returns uRDF::Box:
	{uRDF::Box}
	'Box'
	;

Cylinder returns uRDF::Cylinder:
	{uRDF::Cylinder}
	'Cylinder'
	;

Mesh returns uRDF::Mesh:
	{uRDF::Mesh}
	'Mesh'
	;

Sphere returns uRDF::Sphere:
	{uRDF::Sphere}
	'Sphere'
	;

enum JointType returns uRDF::JointType:
				revolute = 'Revolute' | continous = 'Continous' | fixed = 'Fixed' | prismatic = 'Prismatic';

Limit returns uRDF::Limit:
	{uRDF::Limit}
	 'Limit'
		(lower=FLOAT)?
		(upper=FLOAT)?
		(effort=FLOAT)?
		(velocity=FLOAT)?
;

Axis returns uRDF::Axis:
	/* Binary values */
	{uRDF::Axis}
		'Axis'
		('x' x=INT)?
		('y' y=INT)?
		('z' z=INT)?
;

Calibration returns uRDF::Calibration:
	{uRDF::Calibration}
	 'Calibration'
	 	('Rising' rising=FLOAT)? 
	 	('Falling' falling=FLOAT)? 
;

Dynamics returns uRDF::Dynamics:
	{uRDF::Dynamics}
		'Dynamics'
		('Friction' friction=FLOAT)?
		('Damping' damping=FLOAT)?
;

Mimic returns uRDF::Mimic:
	{uRDF::Mimic}
		'Mimic'
		('Multiplier' multiplier=FLOAT)?
		('OffSet' offSet=FLOAT)?
;

SafetyController returns uRDF::SafetyController:
	{uRDF::SafetyController}
		'SafetyController'
		('SoftLowerLimit' softLowerLimit=FLOAT)?
		('SoftUpperLimit' softUpperLimit=FLOAT)?
		('k_position' k_position=FLOAT)?
		('k_velocity' k_velocity=FLOAT)?
;

FLOAT returns ecore::EFloat:
	INT '.' INT
;

REFLECT:
'reflect'	
;


NL:
	('\n' | '\r')+
;

