/*
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.validation

import org.eclipse.xtext.validation.Check
import uRDF.Limit
import uRDF.Robot

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class DslValidator extends AbstractDslValidator {
	

	@Check
	def checkURDFComplete(Robot robot)
	{
		//robotContainsLink(robot)
		
		checkJointTypes(robot)
//		if(!checkJointParentChildRelations(robot))
//		{
//			error("Parent child problem", URDFPackage.Literals.ROBOT__JOINT)
//		} else {
//			info("Robot is valid",URDFPackage.Literals.ROBOT__LINK);
//		}
		
	}
	
	
	def checkJointParentChildRelations (Robot robot) {
      robot.getJoint.forall[j | j.getParentOf != j.getChildOf]
    }
    
	def robotContainsLink(Robot robot) {
		robot.link.length > 0
	}
	
	def checkJointTypes(Robot robot) {
		robot.joint.filter[j | j.type.equals("Revolute") || j.type.equals("Prismatic")].forall[j | j.eContents.exists[x | x.class.equals(Limit)]]
	}
	
}
