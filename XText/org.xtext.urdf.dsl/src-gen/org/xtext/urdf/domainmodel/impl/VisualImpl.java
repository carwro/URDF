/**
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.domainmodel.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.urdf.domainmodel.DomainmodelPackage;
import org.xtext.urdf.domainmodel.Geometry;
import org.xtext.urdf.domainmodel.Material;
import org.xtext.urdf.domainmodel.Origin;
import org.xtext.urdf.domainmodel.Visual;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Visual</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.urdf.domainmodel.impl.VisualImpl#getMaterial <em>Material</em>}</li>
 *   <li>{@link org.xtext.urdf.domainmodel.impl.VisualImpl#getOrigin <em>Origin</em>}</li>
 *   <li>{@link org.xtext.urdf.domainmodel.impl.VisualImpl#getGeometry <em>Geometry</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VisualImpl extends MinimalEObjectImpl.Container implements Visual
{
  /**
   * The cached value of the '{@link #getMaterial() <em>Material</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaterial()
   * @generated
   * @ordered
   */
  protected Material material;

  /**
   * The cached value of the '{@link #getOrigin() <em>Origin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrigin()
   * @generated
   * @ordered
   */
  protected Origin origin;

  /**
   * The cached value of the '{@link #getGeometry() <em>Geometry</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeometry()
   * @generated
   * @ordered
   */
  protected Geometry geometry;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VisualImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DomainmodelPackage.Literals.VISUAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Material getMaterial()
  {
    return material;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaterial(Material newMaterial, NotificationChain msgs)
  {
    Material oldMaterial = material;
    material = newMaterial;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DomainmodelPackage.VISUAL__MATERIAL, oldMaterial, newMaterial);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaterial(Material newMaterial)
  {
    if (newMaterial != material)
    {
      NotificationChain msgs = null;
      if (material != null)
        msgs = ((InternalEObject)material).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DomainmodelPackage.VISUAL__MATERIAL, null, msgs);
      if (newMaterial != null)
        msgs = ((InternalEObject)newMaterial).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DomainmodelPackage.VISUAL__MATERIAL, null, msgs);
      msgs = basicSetMaterial(newMaterial, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainmodelPackage.VISUAL__MATERIAL, newMaterial, newMaterial));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Origin getOrigin()
  {
    return origin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOrigin(Origin newOrigin, NotificationChain msgs)
  {
    Origin oldOrigin = origin;
    origin = newOrigin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DomainmodelPackage.VISUAL__ORIGIN, oldOrigin, newOrigin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOrigin(Origin newOrigin)
  {
    if (newOrigin != origin)
    {
      NotificationChain msgs = null;
      if (origin != null)
        msgs = ((InternalEObject)origin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DomainmodelPackage.VISUAL__ORIGIN, null, msgs);
      if (newOrigin != null)
        msgs = ((InternalEObject)newOrigin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DomainmodelPackage.VISUAL__ORIGIN, null, msgs);
      msgs = basicSetOrigin(newOrigin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainmodelPackage.VISUAL__ORIGIN, newOrigin, newOrigin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Geometry getGeometry()
  {
    return geometry;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGeometry(Geometry newGeometry, NotificationChain msgs)
  {
    Geometry oldGeometry = geometry;
    geometry = newGeometry;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DomainmodelPackage.VISUAL__GEOMETRY, oldGeometry, newGeometry);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGeometry(Geometry newGeometry)
  {
    if (newGeometry != geometry)
    {
      NotificationChain msgs = null;
      if (geometry != null)
        msgs = ((InternalEObject)geometry).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DomainmodelPackage.VISUAL__GEOMETRY, null, msgs);
      if (newGeometry != null)
        msgs = ((InternalEObject)newGeometry).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DomainmodelPackage.VISUAL__GEOMETRY, null, msgs);
      msgs = basicSetGeometry(newGeometry, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainmodelPackage.VISUAL__GEOMETRY, newGeometry, newGeometry));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DomainmodelPackage.VISUAL__MATERIAL:
        return basicSetMaterial(null, msgs);
      case DomainmodelPackage.VISUAL__ORIGIN:
        return basicSetOrigin(null, msgs);
      case DomainmodelPackage.VISUAL__GEOMETRY:
        return basicSetGeometry(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DomainmodelPackage.VISUAL__MATERIAL:
        return getMaterial();
      case DomainmodelPackage.VISUAL__ORIGIN:
        return getOrigin();
      case DomainmodelPackage.VISUAL__GEOMETRY:
        return getGeometry();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DomainmodelPackage.VISUAL__MATERIAL:
        setMaterial((Material)newValue);
        return;
      case DomainmodelPackage.VISUAL__ORIGIN:
        setOrigin((Origin)newValue);
        return;
      case DomainmodelPackage.VISUAL__GEOMETRY:
        setGeometry((Geometry)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DomainmodelPackage.VISUAL__MATERIAL:
        setMaterial((Material)null);
        return;
      case DomainmodelPackage.VISUAL__ORIGIN:
        setOrigin((Origin)null);
        return;
      case DomainmodelPackage.VISUAL__GEOMETRY:
        setGeometry((Geometry)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DomainmodelPackage.VISUAL__MATERIAL:
        return material != null;
      case DomainmodelPackage.VISUAL__ORIGIN:
        return origin != null;
      case DomainmodelPackage.VISUAL__GEOMETRY:
        return geometry != null;
    }
    return super.eIsSet(featureID);
  }

} //VisualImpl
