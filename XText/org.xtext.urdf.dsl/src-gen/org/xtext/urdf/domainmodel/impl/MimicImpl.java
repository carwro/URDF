/**
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.domainmodel.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.urdf.domainmodel.DomainmodelPackage;
import org.xtext.urdf.domainmodel.Mimic;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Mimic</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.urdf.domainmodel.impl.MimicImpl#getJoint <em>Joint</em>}</li>
 *   <li>{@link org.xtext.urdf.domainmodel.impl.MimicImpl#getMultiplier <em>Multiplier</em>}</li>
 *   <li>{@link org.xtext.urdf.domainmodel.impl.MimicImpl#getOffSet <em>Off Set</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MimicImpl extends MinimalEObjectImpl.Container implements Mimic
{
  /**
   * The default value of the '{@link #getJoint() <em>Joint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoint()
   * @generated
   * @ordered
   */
  protected static final String JOINT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getJoint() <em>Joint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoint()
   * @generated
   * @ordered
   */
  protected String joint = JOINT_EDEFAULT;

  /**
   * The default value of the '{@link #getMultiplier() <em>Multiplier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultiplier()
   * @generated
   * @ordered
   */
  protected static final int MULTIPLIER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMultiplier() <em>Multiplier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultiplier()
   * @generated
   * @ordered
   */
  protected int multiplier = MULTIPLIER_EDEFAULT;

  /**
   * The default value of the '{@link #getOffSet() <em>Off Set</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffSet()
   * @generated
   * @ordered
   */
  protected static final int OFF_SET_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getOffSet() <em>Off Set</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffSet()
   * @generated
   * @ordered
   */
  protected int offSet = OFF_SET_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MimicImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DomainmodelPackage.Literals.MIMIC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getJoint()
  {
    return joint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setJoint(String newJoint)
  {
    String oldJoint = joint;
    joint = newJoint;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainmodelPackage.MIMIC__JOINT, oldJoint, joint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMultiplier()
  {
    return multiplier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultiplier(int newMultiplier)
  {
    int oldMultiplier = multiplier;
    multiplier = newMultiplier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainmodelPackage.MIMIC__MULTIPLIER, oldMultiplier, multiplier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getOffSet()
  {
    return offSet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOffSet(int newOffSet)
  {
    int oldOffSet = offSet;
    offSet = newOffSet;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainmodelPackage.MIMIC__OFF_SET, oldOffSet, offSet));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DomainmodelPackage.MIMIC__JOINT:
        return getJoint();
      case DomainmodelPackage.MIMIC__MULTIPLIER:
        return getMultiplier();
      case DomainmodelPackage.MIMIC__OFF_SET:
        return getOffSet();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DomainmodelPackage.MIMIC__JOINT:
        setJoint((String)newValue);
        return;
      case DomainmodelPackage.MIMIC__MULTIPLIER:
        setMultiplier((Integer)newValue);
        return;
      case DomainmodelPackage.MIMIC__OFF_SET:
        setOffSet((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DomainmodelPackage.MIMIC__JOINT:
        setJoint(JOINT_EDEFAULT);
        return;
      case DomainmodelPackage.MIMIC__MULTIPLIER:
        setMultiplier(MULTIPLIER_EDEFAULT);
        return;
      case DomainmodelPackage.MIMIC__OFF_SET:
        setOffSet(OFF_SET_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DomainmodelPackage.MIMIC__JOINT:
        return JOINT_EDEFAULT == null ? joint != null : !JOINT_EDEFAULT.equals(joint);
      case DomainmodelPackage.MIMIC__MULTIPLIER:
        return multiplier != MULTIPLIER_EDEFAULT;
      case DomainmodelPackage.MIMIC__OFF_SET:
        return offSet != OFF_SET_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (Joint: ");
    result.append(joint);
    result.append(", Multiplier: ");
    result.append(multiplier);
    result.append(", OffSet: ");
    result.append(offSet);
    result.append(')');
    return result.toString();
  }

} //MimicImpl
