/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.urdf.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.urdf.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.urdf.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Robot";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RobotName'
		{
			newLeafNode(otherlv_0, grammarAccess.getRobotAccess().getRobotNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRobotAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRobotRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='link'
		{
			newLeafNode(otherlv_3, grammarAccess.getRobotAccess().getLinkKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_4_0());
				}
				lv_link_4_0=ruleLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					add(
						$current,
						"link",
						lv_link_4_0,
						"org.xtext.urdf.Dsl.Link");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getRobotAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_5_1_0());
					}
					lv_link_6_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"link",
							lv_link_6_0,
							"org.xtext.urdf.Dsl.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_7='joint'
			{
				newLeafNode(otherlv_7, grammarAccess.getRobotAccess().getJointKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getJointJointParserRuleCall_6_1_0());
					}
					lv_joint_8_0=ruleJoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"joint",
							lv_joint_8_0,
							"org.xtext.urdf.Dsl.Joint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getJointJointParserRuleCall_6_2_0());
					}
					lv_joint_9_0=ruleJoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"joint",
							lv_joint_9_0,
							"org.xtext.urdf.Dsl.Joint");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleMaterial
entryRuleMaterial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaterialRule()); }
	iv_ruleMaterial=ruleMaterial
	{ $current=$iv_ruleMaterial.current; }
	EOF;

// Rule Material
ruleMaterial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMaterialAccess().getMaterial_ImplParserRuleCall_0());
		}
		this_Material_Impl_0=ruleMaterial_Impl
		{
			$current = $this_Material_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMaterialAccess().getColorParserRuleCall_1());
		}
		this_Color_1=ruleColor
		{
			$current = $this_Color_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMaterialAccess().getTextureParserRuleCall_2());
		}
		this_Texture_2=ruleTexture
		{
			$current = $this_Texture_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current; }
	EOF;

// Rule Geometry
ruleGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getGeometry_ImplParserRuleCall_0());
		}
		this_Geometry_Impl_0=ruleGeometry_Impl
		{
			$current = $this_Geometry_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getBoxParserRuleCall_1());
		}
		this_Box_1=ruleBox
		{
			$current = $this_Box_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_2());
		}
		this_Cylinder_2=ruleCylinder
		{
			$current = $this_Cylinder_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getMeshParserRuleCall_3());
		}
		this_Mesh_3=ruleMesh
		{
			$current = $this_Mesh_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getSphereParserRuleCall_4());
		}
		this_Sphere_4=ruleSphere
		{
			$current = $this_Sphere_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkAccess().getLinkAction_0(),
					$current);
			}
		)
		(
			otherlv_1='inertial'
			{
				newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getInertialKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_1_1_0());
					}
					lv_inertial_2_0=ruleInertial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						add(
							$current,
							"inertial",
							lv_inertial_2_0,
							"org.xtext.urdf.Dsl.Inertial");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_1_2_0());
					}
					lv_inertial_3_0=ruleInertial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						add(
							$current,
							"inertial",
							lv_inertial_3_0,
							"org.xtext.urdf.Dsl.Inertial");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_4='visuals'
			{
				newLeafNode(otherlv_4, grammarAccess.getLinkAccess().getVisualsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_2_1_0());
					}
					lv_visuals_5_0=ruleVisual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						add(
							$current,
							"visuals",
							lv_visuals_5_0,
							"org.xtext.urdf.Dsl.Visual");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_2_2_0());
					}
					lv_visuals_6_0=ruleVisual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						add(
							$current,
							"visuals",
							lv_visuals_6_0,
							"org.xtext.urdf.Dsl.Visual");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_7='collision'
			{
				newLeafNode(otherlv_7, grammarAccess.getLinkAccess().getCollisionKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_1_0());
					}
					lv_collision_8_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						add(
							$current,
							"collision",
							lv_collision_8_0,
							"org.xtext.urdf.Dsl.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_3_2_0());
					}
					lv_collision_9_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						add(
							$current,
							"collision",
							lv_collision_9_0,
							"org.xtext.urdf.Dsl.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	iv_ruleJoint=ruleJoint
	{ $current=$iv_ruleJoint.current; }
	EOF;

// Rule Joint
ruleJoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Type'
			{
				newLeafNode(otherlv_0, grammarAccess.getJointAccess().getTypeKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_0_1_0());
					}
					lv_Type_1_0=ruleJointType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"Type",
							lv_Type_1_0,
							"org.xtext.urdf.Dsl.JointType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_2='ChildOf'
		{
			newLeafNode(otherlv_2, grammarAccess.getJointAccess().getChildOfKeyword_1());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getJointAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getJointAccess().getChildOfLinkCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				otherlv_5=RULE_STRING
				{
					newLeafNode(otherlv_5, grammarAccess.getJointAccess().getChildOfLinkCrossReference_4_0());
				}
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getJointAccess().getRightParenthesisKeyword_5());
		}
		otherlv_7='ParentOf'
		{
			newLeafNode(otherlv_7, grammarAccess.getJointAccess().getParentOfKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				otherlv_8=RULE_STRING
				{
					newLeafNode(otherlv_8, grammarAccess.getJointAccess().getParentOfLinkCrossReference_7_0());
				}
			)
		)
		(
			otherlv_9='limit'
			{
				newLeafNode(otherlv_9, grammarAccess.getJointAccess().getLimitKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_8_1_0());
					}
					lv_limit_10_0=ruleLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"limit",
							lv_limit_10_0,
							"org.xtext.urdf.Dsl.Limit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='axis'
			{
				newLeafNode(otherlv_11, grammarAccess.getJointAccess().getAxisKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_9_1_0());
					}
					lv_axis_12_0=ruleAxis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"axis",
							lv_axis_12_0,
							"org.xtext.urdf.Dsl.Axis");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13='origin'
		{
			newLeafNode(otherlv_13, grammarAccess.getJointAccess().getOriginKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getOriginOriginParserRuleCall_11_0());
				}
				lv_origin_14_0=ruleOrigin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"origin",
						lv_origin_14_0,
						"org.xtext.urdf.Dsl.Origin");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15='callibration'
			{
				newLeafNode(otherlv_15, grammarAccess.getJointAccess().getCallibrationKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getCallibrationCallibrationParserRuleCall_12_1_0());
					}
					lv_callibration_16_0=ruleCallibration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"callibration",
							lv_callibration_16_0,
							"org.xtext.urdf.Dsl.Callibration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_17='dynamics'
			{
				newLeafNode(otherlv_17, grammarAccess.getJointAccess().getDynamicsKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getDynamicsDynamicsParserRuleCall_13_1_0());
					}
					lv_dynamics_18_0=ruleDynamics
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"dynamics",
							lv_dynamics_18_0,
							"org.xtext.urdf.Dsl.Dynamics");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_19='mimic'
			{
				newLeafNode(otherlv_19, grammarAccess.getJointAccess().getMimicKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getMimicMimicParserRuleCall_14_1_0());
					}
					lv_mimic_20_0=ruleMimic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"mimic",
							lv_mimic_20_0,
							"org.xtext.urdf.Dsl.Mimic");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_21='safetycontroller'
			{
				newLeafNode(otherlv_21, grammarAccess.getJointAccess().getSafetycontrollerKeyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getSafetycontrollerSafetyControllerParserRuleCall_15_1_0());
					}
					lv_safetycontroller_22_0=ruleSafetyController
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"safetycontroller",
							lv_safetycontroller_22_0,
							"org.xtext.urdf.Dsl.SafetyController");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInertial
entryRuleInertial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertialRule()); }
	iv_ruleInertial=ruleInertial
	{ $current=$iv_ruleInertial.current; }
	EOF;

// Rule Inertial
ruleInertial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='origin'
		{
			newLeafNode(otherlv_0, grammarAccess.getInertialAccess().getOriginKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_1_0());
				}
				lv_origin_1_0=ruleOrigin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertialRule());
					}
					set(
						$current,
						"origin",
						lv_origin_1_0,
						"org.xtext.urdf.Dsl.Origin");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='mass'
			{
				newLeafNode(otherlv_2, grammarAccess.getInertialAccess().getMassKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getMassMassParserRuleCall_2_1_0());
					}
					lv_mass_3_0=ruleMass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						add(
							$current,
							"mass",
							lv_mass_3_0,
							"org.xtext.urdf.Dsl.Mass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getInertialAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInertialAccess().getMassMassParserRuleCall_2_2_1_0());
						}
						lv_mass_5_0=ruleMass
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInertialRule());
							}
							add(
								$current,
								"mass",
								lv_mass_5_0,
								"org.xtext.urdf.Dsl.Mass");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_6='inertia'
			{
				newLeafNode(otherlv_6, grammarAccess.getInertialAccess().getInertiaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_1_0());
					}
					lv_inertia_7_0=ruleInertia
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						add(
							$current,
							"inertia",
							lv_inertia_7_0,
							"org.xtext.urdf.Dsl.Inertia");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_2_0());
					}
					lv_inertia_8_0=ruleInertia
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInertialRule());
						}
						add(
							$current,
							"inertia",
							lv_inertia_8_0,
							"org.xtext.urdf.Dsl.Inertia");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleVisual
entryRuleVisual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualRule()); }
	iv_ruleVisual=ruleVisual
	{ $current=$iv_ruleVisual.current; }
	EOF;

// Rule Visual
ruleVisual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='material'
			{
				newLeafNode(otherlv_0, grammarAccess.getVisualAccess().getMaterialKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getMaterialMaterialParserRuleCall_0_1_0());
					}
					lv_material_1_0=ruleMaterial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"material",
							lv_material_1_0,
							"org.xtext.urdf.Dsl.Material");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_2='origin'
		{
			newLeafNode(otherlv_2, grammarAccess.getVisualAccess().getOriginKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_2_0());
				}
				lv_origin_3_0=ruleOrigin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"origin",
						lv_origin_3_0,
						"org.xtext.urdf.Dsl.Origin");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='geometry'
		{
			newLeafNode(otherlv_4, grammarAccess.getVisualAccess().getGeometryKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_0());
				}
				lv_geometry_5_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_5_0,
						"org.xtext.urdf.Dsl.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='geometry'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollisionAccess().getGeometryKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_1_0());
				}
				lv_geometry_1_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollisionRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_1_0,
						"org.xtext.urdf.Dsl.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='origin'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollisionAccess().getOriginKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_3_0());
				}
				lv_origin_3_0=ruleOrigin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollisionRule());
					}
					set(
						$current,
						"origin",
						lv_origin_3_0,
						"org.xtext.urdf.Dsl.Origin");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrigin
entryRuleOrigin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOriginRule()); }
	iv_ruleOrigin=ruleOrigin
	{ $current=$iv_ruleOrigin.current; }
	EOF;

// Rule Origin
ruleOrigin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOriginAccess().getOriginAction_0(),
					$current);
			}
		)
		(
			otherlv_1='x'
			{
				newLeafNode(otherlv_1, grammarAccess.getOriginAccess().getXKeyword_1_0());
			}
			(
				(
					lv_x_2_0=RULE_INT
					{
						newLeafNode(lv_x_2_0, grammarAccess.getOriginAccess().getXINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOriginRule());
						}
						setWithLastConsumed(
							$current,
							"x",
							lv_x_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_3='y'
			{
				newLeafNode(otherlv_3, grammarAccess.getOriginAccess().getYKeyword_2_0());
			}
			(
				(
					lv_y_4_0=RULE_INT
					{
						newLeafNode(lv_y_4_0, grammarAccess.getOriginAccess().getYINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOriginRule());
						}
						setWithLastConsumed(
							$current,
							"y",
							lv_y_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_5='z'
			{
				newLeafNode(otherlv_5, grammarAccess.getOriginAccess().getZKeyword_3_0());
			}
			(
				(
					lv_z_6_0=RULE_INT
					{
						newLeafNode(lv_z_6_0, grammarAccess.getOriginAccess().getZINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOriginRule());
						}
						setWithLastConsumed(
							$current,
							"z",
							lv_z_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_7='Roll'
			{
				newLeafNode(otherlv_7, grammarAccess.getOriginAccess().getRollKeyword_4_0());
			}
			(
				(
					lv_Roll_8_0=RULE_INT
					{
						newLeafNode(lv_Roll_8_0, grammarAccess.getOriginAccess().getRollINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOriginRule());
						}
						setWithLastConsumed(
							$current,
							"Roll",
							lv_Roll_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_9='Pitch'
			{
				newLeafNode(otherlv_9, grammarAccess.getOriginAccess().getPitchKeyword_5_0());
			}
			(
				(
					lv_Pitch_10_0=RULE_INT
					{
						newLeafNode(lv_Pitch_10_0, grammarAccess.getOriginAccess().getPitchINTTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOriginRule());
						}
						setWithLastConsumed(
							$current,
							"Pitch",
							lv_Pitch_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_11='Yaw'
			{
				newLeafNode(otherlv_11, grammarAccess.getOriginAccess().getYawKeyword_6_0());
			}
			(
				(
					lv_Yaw_12_0=RULE_INT
					{
						newLeafNode(lv_Yaw_12_0, grammarAccess.getOriginAccess().getYawINTTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOriginRule());
						}
						setWithLastConsumed(
							$current,
							"Yaw",
							lv_Yaw_12_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMass
entryRuleMass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMassRule()); }
	iv_ruleMass=ruleMass
	{ $current=$iv_ruleMass.current; }
	EOF;

// Rule Mass
ruleMass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMassAccess().getMassAction_0(),
					$current);
			}
		)
		otherlv_1='Mass'
		{
			newLeafNode(otherlv_1, grammarAccess.getMassAccess().getMassKeyword_1());
		}
	)
;

// Entry rule entryRuleInertia
entryRuleInertia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertiaRule()); }
	iv_ruleInertia=ruleInertia
	{ $current=$iv_ruleInertia.current; }
	EOF;

// Rule Inertia
ruleInertia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInertiaAccess().getInertiaAction_0(),
					$current);
			}
		)
		otherlv_1='Inertia'
		{
			newLeafNode(otherlv_1, grammarAccess.getInertiaAccess().getInertiaKeyword_1());
		}
	)
;

// Entry rule entryRuleMaterial_Impl
entryRuleMaterial_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaterial_ImplRule()); }
	iv_ruleMaterial_Impl=ruleMaterial_Impl
	{ $current=$iv_ruleMaterial_Impl.current; }
	EOF;

// Rule Material_Impl
ruleMaterial_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMaterial_ImplAccess().getMaterialAction_0(),
					$current);
			}
		)
		otherlv_1='Material'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaterial_ImplAccess().getMaterialKeyword_1());
		}
	)
;

// Entry rule entryRuleGeometry_Impl
entryRuleGeometry_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometry_ImplRule()); }
	iv_ruleGeometry_Impl=ruleGeometry_Impl
	{ $current=$iv_ruleGeometry_Impl.current; }
	EOF;

// Rule Geometry_Impl
ruleGeometry_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGeometry_ImplAccess().getGeometryAction_0(),
					$current);
			}
		)
		otherlv_1='Geometry'
		{
			newLeafNode(otherlv_1, grammarAccess.getGeometry_ImplAccess().getGeometryKeyword_1());
		}
	)
;

// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	iv_ruleColor=ruleColor
	{ $current=$iv_ruleColor.current; }
	EOF;

// Rule Color
ruleColor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColorAccess().getColorAction_0(),
					$current);
			}
		)
		otherlv_1='Color'
		{
			newLeafNode(otherlv_1, grammarAccess.getColorAccess().getColorKeyword_1());
		}
	)
;

// Entry rule entryRuleTexture
entryRuleTexture returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextureRule()); }
	iv_ruleTexture=ruleTexture
	{ $current=$iv_ruleTexture.current; }
	EOF;

// Rule Texture
ruleTexture returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTextureAccess().getTextureAction_0(),
					$current);
			}
		)
		otherlv_1='Texture'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextureAccess().getTextureKeyword_1());
		}
	)
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoxAccess().getBoxAction_0(),
					$current);
			}
		)
		otherlv_1='Box'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoxAccess().getBoxKeyword_1());
		}
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCylinderAccess().getCylinderAction_0(),
					$current);
			}
		)
		otherlv_1='Cylinder'
		{
			newLeafNode(otherlv_1, grammarAccess.getCylinderAccess().getCylinderKeyword_1());
		}
	)
;

// Entry rule entryRuleMesh
entryRuleMesh returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeshRule()); }
	iv_ruleMesh=ruleMesh
	{ $current=$iv_ruleMesh.current; }
	EOF;

// Rule Mesh
ruleMesh returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMeshAccess().getMeshAction_0(),
					$current);
			}
		)
		otherlv_1='Mesh'
		{
			newLeafNode(otherlv_1, grammarAccess.getMeshAccess().getMeshKeyword_1());
		}
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSphereAccess().getSphereAction_0(),
					$current);
			}
		)
		otherlv_1='Sphere'
		{
			newLeafNode(otherlv_1, grammarAccess.getSphereAccess().getSphereKeyword_1());
		}
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLimitAccess().getLimitAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Lower'
			{
				newLeafNode(otherlv_1, grammarAccess.getLimitAccess().getLowerKeyword_1_0());
			}
			(
				(
					lv_Lower_2_0=RULE_INT
					{
						newLeafNode(lv_Lower_2_0, grammarAccess.getLimitAccess().getLowerINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"Lower",
							lv_Lower_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_3='Upper'
			{
				newLeafNode(otherlv_3, grammarAccess.getLimitAccess().getUpperKeyword_2_0());
			}
			(
				(
					lv_Upper_4_0=RULE_INT
					{
						newLeafNode(lv_Upper_4_0, grammarAccess.getLimitAccess().getUpperINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"Upper",
							lv_Upper_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_5='Effort'
			{
				newLeafNode(otherlv_5, grammarAccess.getLimitAccess().getEffortKeyword_3_0());
			}
			(
				(
					lv_Effort_6_0=RULE_INT
					{
						newLeafNode(lv_Effort_6_0, grammarAccess.getLimitAccess().getEffortINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"Effort",
							lv_Effort_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_7='Velocity'
			{
				newLeafNode(otherlv_7, grammarAccess.getLimitAccess().getVelocityKeyword_4_0());
			}
			(
				(
					lv_Velocity_8_0=RULE_INT
					{
						newLeafNode(lv_Velocity_8_0, grammarAccess.getLimitAccess().getVelocityINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLimitRule());
						}
						setWithLastConsumed(
							$current,
							"Velocity",
							lv_Velocity_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAxis
entryRuleAxis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAxisRule()); }
	iv_ruleAxis=ruleAxis
	{ $current=$iv_ruleAxis.current; }
	EOF;

// Rule Axis
ruleAxis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAxisAccess().getAxisAction_0(),
					$current);
			}
		)
		(
			otherlv_1='x'
			{
				newLeafNode(otherlv_1, grammarAccess.getAxisAccess().getXKeyword_1_0());
			}
			(
				(
					lv_x_2_0=RULE_INT
					{
						newLeafNode(lv_x_2_0, grammarAccess.getAxisAccess().getXINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"x",
							lv_x_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_3='y'
			{
				newLeafNode(otherlv_3, grammarAccess.getAxisAccess().getYKeyword_2_0());
			}
			(
				(
					lv_y_4_0=RULE_INT
					{
						newLeafNode(lv_y_4_0, grammarAccess.getAxisAccess().getYINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"y",
							lv_y_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_5='z'
			{
				newLeafNode(otherlv_5, grammarAccess.getAxisAccess().getZKeyword_3_0());
			}
			(
				(
					lv_z_6_0=RULE_INT
					{
						newLeafNode(lv_z_6_0, grammarAccess.getAxisAccess().getZINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"z",
							lv_z_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCallibration
entryRuleCallibration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallibrationRule()); }
	iv_ruleCallibration=ruleCallibration
	{ $current=$iv_ruleCallibration.current; }
	EOF;

// Rule Callibration
ruleCallibration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallibrationAccess().getCallibrationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Rising'
			{
				newLeafNode(otherlv_1, grammarAccess.getCallibrationAccess().getRisingKeyword_1_0());
			}
			(
				(
					lv_Rising_2_0=RULE_STRING
					{
						newLeafNode(lv_Rising_2_0, grammarAccess.getCallibrationAccess().getRisingSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCallibrationRule());
						}
						setWithLastConsumed(
							$current,
							"Rising",
							lv_Rising_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_3='Falling'
			{
				newLeafNode(otherlv_3, grammarAccess.getCallibrationAccess().getFallingKeyword_2_0());
			}
			(
				(
					lv_Falling_4_0=RULE_STRING
					{
						newLeafNode(lv_Falling_4_0, grammarAccess.getCallibrationAccess().getFallingSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCallibrationRule());
						}
						setWithLastConsumed(
							$current,
							"Falling",
							lv_Falling_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDynamics
entryRuleDynamics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDynamicsRule()); }
	iv_ruleDynamics=ruleDynamics
	{ $current=$iv_ruleDynamics.current; }
	EOF;

// Rule Dynamics
ruleDynamics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDynamicsAccess().getDynamicsAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Friction'
			{
				newLeafNode(otherlv_1, grammarAccess.getDynamicsAccess().getFrictionKeyword_1_0());
			}
			(
				(
					lv_Friction_2_0=RULE_INT
					{
						newLeafNode(lv_Friction_2_0, grammarAccess.getDynamicsAccess().getFrictionINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDynamicsRule());
						}
						setWithLastConsumed(
							$current,
							"Friction",
							lv_Friction_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_3='Damping'
			{
				newLeafNode(otherlv_3, grammarAccess.getDynamicsAccess().getDampingKeyword_2_0());
			}
			(
				(
					lv_Damping_4_0=RULE_INT
					{
						newLeafNode(lv_Damping_4_0, grammarAccess.getDynamicsAccess().getDampingINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDynamicsRule());
						}
						setWithLastConsumed(
							$current,
							"Damping",
							lv_Damping_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMimic
entryRuleMimic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMimicRule()); }
	iv_ruleMimic=ruleMimic
	{ $current=$iv_ruleMimic.current; }
	EOF;

// Rule Mimic
ruleMimic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMimicAccess().getMimicAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Joint'
			{
				newLeafNode(otherlv_1, grammarAccess.getMimicAccess().getJointKeyword_1_0());
			}
			(
				(
					lv_Joint_2_0=RULE_STRING
					{
						newLeafNode(lv_Joint_2_0, grammarAccess.getMimicAccess().getJointSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMimicRule());
						}
						setWithLastConsumed(
							$current,
							"Joint",
							lv_Joint_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_3='Multiplier'
			{
				newLeafNode(otherlv_3, grammarAccess.getMimicAccess().getMultiplierKeyword_2_0());
			}
			(
				(
					lv_Multiplier_4_0=RULE_INT
					{
						newLeafNode(lv_Multiplier_4_0, grammarAccess.getMimicAccess().getMultiplierINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMimicRule());
						}
						setWithLastConsumed(
							$current,
							"Multiplier",
							lv_Multiplier_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_5='OffSet'
			{
				newLeafNode(otherlv_5, grammarAccess.getMimicAccess().getOffSetKeyword_3_0());
			}
			(
				(
					lv_OffSet_6_0=RULE_INT
					{
						newLeafNode(lv_OffSet_6_0, grammarAccess.getMimicAccess().getOffSetINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMimicRule());
						}
						setWithLastConsumed(
							$current,
							"OffSet",
							lv_OffSet_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSafetyController
entryRuleSafetyController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSafetyControllerRule()); }
	iv_ruleSafetyController=ruleSafetyController
	{ $current=$iv_ruleSafetyController.current; }
	EOF;

// Rule SafetyController
ruleSafetyController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSafetyControllerAccess().getSafetyControllerAction_0(),
					$current);
			}
		)
		(
			otherlv_1='SoftLowerLimit'
			{
				newLeafNode(otherlv_1, grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_1_0());
			}
			(
				(
					lv_SoftLowerLimit_2_0=RULE_INT
					{
						newLeafNode(lv_SoftLowerLimit_2_0, grammarAccess.getSafetyControllerAccess().getSoftLowerLimitINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSafetyControllerRule());
						}
						setWithLastConsumed(
							$current,
							"SoftLowerLimit",
							lv_SoftLowerLimit_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_3='SoftUpperLimit'
			{
				newLeafNode(otherlv_3, grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_2_0());
			}
			(
				(
					lv_SoftUpperLimit_4_0=RULE_INT
					{
						newLeafNode(lv_SoftUpperLimit_4_0, grammarAccess.getSafetyControllerAccess().getSoftUpperLimitINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSafetyControllerRule());
						}
						setWithLastConsumed(
							$current,
							"SoftUpperLimit",
							lv_SoftUpperLimit_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_5='k_position'
			{
				newLeafNode(otherlv_5, grammarAccess.getSafetyControllerAccess().getK_positionKeyword_3_0());
			}
			(
				(
					lv_k_position_6_0=RULE_INT
					{
						newLeafNode(lv_k_position_6_0, grammarAccess.getSafetyControllerAccess().getK_positionINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSafetyControllerRule());
						}
						setWithLastConsumed(
							$current,
							"k_position",
							lv_k_position_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_7='k_velocity'
			{
				newLeafNode(otherlv_7, grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_4_0());
			}
			(
				(
					lv_k_velocity_8_0=RULE_INT
					{
						newLeafNode(lv_k_velocity_8_0, grammarAccess.getSafetyControllerAccess().getK_velocityINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSafetyControllerRule());
						}
						setWithLastConsumed(
							$current,
							"k_velocity",
							lv_k_velocity_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Rule JointType
ruleJointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Revolute'
			{
				$current = grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Continous'
			{
				$current = grammarAccess.getJointTypeAccess().getContinousEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getJointTypeAccess().getContinousEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Fixed'
			{
				$current = grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Prismatic'
			{
				$current = grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
