/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.urdf.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.urdf.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.urdf.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Robot";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Robot'
		{
			newLeafNode(otherlv_0, grammarAccess.getRobotAccess().getRobotKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRobotRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_2_0());
				}
				lv_link_2_0=ruleLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					add(
						$current,
						"link",
						lv_link_2_0,
						"org.xtext.urdf.Dsl.Link");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getJointJointParserRuleCall_3_0());
				}
				lv_joint_3_0=ruleJoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					add(
						$current,
						"joint",
						lv_joint_3_0,
						"org.xtext.urdf.Dsl.Joint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleMaterial
entryRuleMaterial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaterialRule()); }
	iv_ruleMaterial=ruleMaterial
	{ $current=$iv_ruleMaterial.current; }
	EOF;

// Rule Material
ruleMaterial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMaterialAccess().getColorParserRuleCall_0());
		}
		this_Color_0=ruleColor
		{
			$current = $this_Color_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMaterialAccess().getTextureParserRuleCall_1());
		}
		this_Texture_1=ruleTexture
		{
			$current = $this_Texture_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current; }
	EOF;

// Rule Geometry
ruleGeometry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getBoxParserRuleCall_0());
		}
		this_Box_0=ruleBox
		{
			$current = $this_Box_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_1());
		}
		this_Cylinder_1=ruleCylinder
		{
			$current = $this_Cylinder_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getMeshParserRuleCall_2());
		}
		this_Mesh_2=ruleMesh
		{
			$current = $this_Mesh_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGeometryAccess().getSphereParserRuleCall_3());
		}
		this_Sphere_3=ruleSphere
		{
			$current = $this_Sphere_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkAccess().getLinkAction_0(),
					$current);
			}
		)
		otherlv_1='Link'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getLinkKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_3_0());
				}
				lv_visuals_3_0=ruleVisual
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					add(
						$current,
						"visuals",
						lv_visuals_3_0,
						"org.xtext.urdf.Dsl.Visual");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_4_0());
				}
				lv_inertial_4_0=ruleInertial
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					add(
						$current,
						"inertial",
						lv_inertial_4_0,
						"org.xtext.urdf.Dsl.Inertial");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='Collision'
			{
				newLeafNode(otherlv_5, grammarAccess.getLinkAccess().getCollisionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_5_1_0());
					}
					lv_collision_6_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						add(
							$current,
							"collision",
							lv_collision_6_0,
							"org.xtext.urdf.Dsl.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	iv_ruleJoint=ruleJoint
	{ $current=$iv_ruleJoint.current; }
	EOF;

// Rule Joint
ruleJoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Joint'
		{
			newLeafNode(otherlv_0, grammarAccess.getJointAccess().getJointKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='Type'
		{
			newLeafNode(otherlv_2, grammarAccess.getJointAccess().getTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_3_0());
				}
				lv_Type_3_0=ruleJointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJointRule());
					}
					set(
						$current,
						"Type",
						lv_Type_3_0,
						"org.xtext.urdf.Dsl.JointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='ChildOf'
		{
			newLeafNode(otherlv_4, grammarAccess.getJointAccess().getChildOfKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getJointAccess().getChildOfLinkCrossReference_5_0());
				}
			)
		)
		otherlv_6='ParentOf'
		{
			newLeafNode(otherlv_6, grammarAccess.getJointAccess().getParentOfKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJointRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getJointAccess().getParentOfLinkCrossReference_7_0());
				}
			)
		)
		(
			otherlv_8='Limit'
			{
				newLeafNode(otherlv_8, grammarAccess.getJointAccess().getLimitKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_8_1_0());
					}
					lv_limit_9_0=ruleLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"limit",
							lv_limit_9_0,
							"org.xtext.urdf.Dsl.Limit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='Axis'
			{
				newLeafNode(otherlv_10, grammarAccess.getJointAccess().getAxisKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_9_1_0());
					}
					lv_axis_11_0=ruleAxis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"axis",
							lv_axis_11_0,
							"org.xtext.urdf.Dsl.Axis");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='Origin'
			{
				newLeafNode(otherlv_12, grammarAccess.getJointAccess().getOriginKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getOriginOriginParserRuleCall_10_1_0());
					}
					lv_origin_13_0=ruleOrigin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"origin",
							lv_origin_13_0,
							"org.xtext.urdf.Dsl.Origin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='Calibration'
			{
				newLeafNode(otherlv_14, grammarAccess.getJointAccess().getCalibrationKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getCalibrationCalibrationParserRuleCall_11_1_0());
					}
					lv_calibration_15_0=ruleCalibration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"calibration",
							lv_calibration_15_0,
							"org.xtext.urdf.Dsl.Calibration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='Dynamics'
			{
				newLeafNode(otherlv_16, grammarAccess.getJointAccess().getDynamicsKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getDynamicsDynamicsParserRuleCall_12_1_0());
					}
					lv_dynamics_17_0=ruleDynamics
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"dynamics",
							lv_dynamics_17_0,
							"org.xtext.urdf.Dsl.Dynamics");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_18='Mimic'
			{
				newLeafNode(otherlv_18, grammarAccess.getJointAccess().getMimicKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getMimicMimicParserRuleCall_13_1_0());
					}
					lv_mimic_19_0=ruleMimic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"mimic",
							lv_mimic_19_0,
							"org.xtext.urdf.Dsl.Mimic");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_20='SafetyController'
			{
				newLeafNode(otherlv_20, grammarAccess.getJointAccess().getSafetyControllerKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJointAccess().getSafetycontrollerSafetyControllerParserRuleCall_14_1_0());
					}
					lv_safetycontroller_21_0=ruleSafetyController
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJointRule());
						}
						set(
							$current,
							"safetycontroller",
							lv_safetycontroller_21_0,
							"org.xtext.urdf.Dsl.SafetyController");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInertial
entryRuleInertial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertialRule()); }
	iv_ruleInertial=ruleInertial
	{ $current=$iv_ruleInertial.current; }
	EOF;

// Rule Inertial
ruleInertial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Inertial'
		{
			newLeafNode(otherlv_0, grammarAccess.getInertialAccess().getInertialKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInertialAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInertialRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='Inertia'
		{
			newLeafNode(otherlv_2, grammarAccess.getInertialAccess().getInertiaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_0());
				}
				lv_inertia_3_0=ruleInertia
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertialRule());
					}
					set(
						$current,
						"inertia",
						lv_inertia_3_0,
						"org.xtext.urdf.Dsl.Inertia");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='Mass'
		{
			newLeafNode(otherlv_4, grammarAccess.getInertialAccess().getMassKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertialAccess().getMassMassParserRuleCall_5_0());
				}
				lv_mass_5_0=ruleMass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertialRule());
					}
					set(
						$current,
						"mass",
						lv_mass_5_0,
						"org.xtext.urdf.Dsl.Mass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_6_0());
				}
				lv_origin_6_0=ruleOrigin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertialRule());
					}
					set(
						$current,
						"origin",
						lv_origin_6_0,
						"org.xtext.urdf.Dsl.Origin");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleVisual
entryRuleVisual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualRule()); }
	iv_ruleVisual=ruleVisual
	{ $current=$iv_ruleVisual.current; }
	EOF;

// Rule Visual
ruleVisual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Visual'
		{
			newLeafNode(otherlv_0, grammarAccess.getVisualAccess().getVisualKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVisualAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVisualRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='Geometry'
		{
			newLeafNode(otherlv_2, grammarAccess.getVisualAccess().getGeometryKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0());
				}
				lv_geometry_3_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_3_0,
						"org.xtext.urdf.Dsl.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_4_0());
				}
				lv_origin_4_0=ruleOrigin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualRule());
					}
					set(
						$current,
						"origin",
						lv_origin_4_0,
						"org.xtext.urdf.Dsl.Origin");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5='Material'
			{
				newLeafNode(otherlv_5, grammarAccess.getVisualAccess().getMaterialKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVisualAccess().getMaterialMaterialParserRuleCall_5_1_0());
					}
					lv_material_6_0=ruleMaterial
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVisualRule());
						}
						set(
							$current,
							"material",
							lv_material_6_0,
							"org.xtext.urdf.Dsl.Material");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCollisionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollisionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='Geometry'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollisionAccess().getGeometryKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_2_0());
				}
				lv_geometry_2_0=ruleGeometry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollisionRule());
					}
					set(
						$current,
						"geometry",
						lv_geometry_2_0,
						"org.xtext.urdf.Dsl.Geometry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='Origin'
			{
				newLeafNode(otherlv_3, grammarAccess.getCollisionAccess().getOriginKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_3_1_0());
					}
					lv_origin_4_0=ruleOrigin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollisionRule());
						}
						set(
							$current,
							"origin",
							lv_origin_4_0,
							"org.xtext.urdf.Dsl.Origin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOrigin
entryRuleOrigin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOriginRule()); }
	iv_ruleOrigin=ruleOrigin
	{ $current=$iv_ruleOrigin.current; }
	EOF;

// Rule Origin
ruleOrigin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Origin'
		{
			newLeafNode(otherlv_0, grammarAccess.getOriginAccess().getOriginKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOriginAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOriginRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='xyz'
		{
			newLeafNode(otherlv_2, grammarAccess.getOriginAccess().getXyzKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOriginAccess().getXFLOATParserRuleCall_3_0());
				}
				lv_x_3_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOriginRule());
					}
					set(
						$current,
						"x",
						lv_x_3_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOriginAccess().getYFLOATParserRuleCall_4_0());
				}
				lv_y_4_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOriginRule());
					}
					set(
						$current,
						"y",
						lv_y_4_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOriginAccess().getZFLOATParserRuleCall_5_0());
				}
				lv_z_5_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOriginRule());
					}
					set(
						$current,
						"z",
						lv_z_5_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='roll_pitch_yaw'
			{
				newLeafNode(otherlv_6, grammarAccess.getOriginAccess().getRoll_pitch_yawKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOriginAccess().getRollFLOATParserRuleCall_6_1_0());
					}
					lv_roll_7_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOriginRule());
						}
						set(
							$current,
							"roll",
							lv_roll_7_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOriginAccess().getPitchFLOATParserRuleCall_6_2_0());
					}
					lv_pitch_8_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOriginRule());
						}
						set(
							$current,
							"pitch",
							lv_pitch_8_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOriginAccess().getYawFLOATParserRuleCall_6_3_0());
					}
					lv_yaw_9_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOriginRule());
						}
						set(
							$current,
							"yaw",
							lv_yaw_9_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMass
entryRuleMass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMassRule()); }
	iv_ruleMass=ruleMass
	{ $current=$iv_ruleMass.current; }
	EOF;

// Rule Mass
ruleMass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMassAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_1='massValueInKilograms'
		{
			newLeafNode(otherlv_1, grammarAccess.getMassAccess().getMassValueInKilogramsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMassAccess().getMassValueInKilogramsFLOATParserRuleCall_2_0());
				}
				lv_massValueInKilograms_2_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMassRule());
					}
					set(
						$current,
						"massValueInKilograms",
						lv_massValueInKilograms_2_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInertia
entryRuleInertia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInertiaRule()); }
	iv_ruleInertia=ruleInertia
	{ $current=$iv_ruleInertia.current; }
	EOF;

// Rule Inertia
ruleInertia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getInertiaAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInertiaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_1='ixx'
		{
			newLeafNode(otherlv_1, grammarAccess.getInertiaAccess().getIxxKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertiaAccess().getIxxFLOATParserRuleCall_2_0());
				}
				lv_ixx_2_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertiaRule());
					}
					set(
						$current,
						"ixx",
						lv_ixx_2_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='ixy'
		{
			newLeafNode(otherlv_3, grammarAccess.getInertiaAccess().getIxyKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertiaAccess().getIxyFLOATParserRuleCall_4_0());
				}
				lv_ixy_4_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertiaRule());
					}
					set(
						$current,
						"ixy",
						lv_ixy_4_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='ixz'
		{
			newLeafNode(otherlv_5, grammarAccess.getInertiaAccess().getIxzKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertiaAccess().getIxzFLOATParserRuleCall_6_0());
				}
				lv_ixz_6_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertiaRule());
					}
					set(
						$current,
						"ixz",
						lv_ixz_6_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='iyy'
		{
			newLeafNode(otherlv_7, grammarAccess.getInertiaAccess().getIyyKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertiaAccess().getIyyFLOATParserRuleCall_8_0());
				}
				lv_iyy_8_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertiaRule());
					}
					set(
						$current,
						"iyy",
						lv_iyy_8_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='iyz'
		{
			newLeafNode(otherlv_9, grammarAccess.getInertiaAccess().getIyzKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertiaAccess().getIyzFLOATParserRuleCall_10_0());
				}
				lv_iyz_10_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertiaRule());
					}
					set(
						$current,
						"iyz",
						lv_iyz_10_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='izz'
		{
			newLeafNode(otherlv_11, grammarAccess.getInertiaAccess().getIzzKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInertiaAccess().getIzzFLOATParserRuleCall_12_0());
				}
				lv_izz_12_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInertiaRule());
					}
					set(
						$current,
						"izz",
						lv_izz_12_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	iv_ruleColor=ruleColor
	{ $current=$iv_ruleColor.current; }
	EOF;

// Rule Color
ruleColor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Color'
			{
				newLeafNode(otherlv_0, grammarAccess.getColorAccess().getColorKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getColorAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColorRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_2='red_green_blue_alpha'
			{
				newLeafNode(otherlv_2, grammarAccess.getColorAccess().getRed_green_blue_alphaKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getRedFLOATParserRuleCall_0_3_0());
					}
					lv_red_3_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"red",
							lv_red_3_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getGreenFLOATParserRuleCall_0_4_0());
					}
					lv_green_4_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"green",
							lv_green_4_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getBlueFLOATParserRuleCall_0_5_0());
					}
					lv_blue_5_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"blue",
							lv_blue_5_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getAlphaFLOATParserRuleCall_0_6_0());
					}
					lv_alpha_6_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"alpha",
							lv_alpha_6_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_7='red'
			{
				newLeafNode(otherlv_7, grammarAccess.getColorAccess().getRedKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getRedFLOATParserRuleCall_1_1_0());
					}
					lv_red_8_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"red",
							lv_red_8_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='green'
			{
				newLeafNode(otherlv_9, grammarAccess.getColorAccess().getGreenKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getGreenFLOATParserRuleCall_1_3_0());
					}
					lv_green_10_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"green",
							lv_green_10_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='blue'
			{
				newLeafNode(otherlv_11, grammarAccess.getColorAccess().getBlueKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getBlueFLOATParserRuleCall_1_5_0());
					}
					lv_blue_12_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"blue",
							lv_blue_12_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='alpha'
			{
				newLeafNode(otherlv_13, grammarAccess.getColorAccess().getAlphaKeyword_1_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getAlphaFLOATParserRuleCall_1_7_0());
					}
					lv_alpha_14_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"alpha",
							lv_alpha_14_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTexture
entryRuleTexture returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextureRule()); }
	iv_ruleTexture=ruleTexture
	{ $current=$iv_ruleTexture.current; }
	EOF;

// Rule Texture
ruleTexture returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Texture'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextureAccess().getTextureKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTextureAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='pathToFile'
		{
			newLeafNode(otherlv_2, grammarAccess.getTextureAccess().getPathToFileKeyword_2());
		}
		(
			(
				lv_pathToFile_3_0=RULE_STRING
				{
					newLeafNode(lv_pathToFile_3_0, grammarAccess.getTextureAccess().getPathToFileSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextureRule());
					}
					setWithLastConsumed(
						$current,
						"pathToFile",
						lv_pathToFile_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Box'
			{
				newLeafNode(otherlv_0, grammarAccess.getBoxAccess().getBoxKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getBoxAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoxRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_2='height_length_width'
			{
				newLeafNode(otherlv_2, grammarAccess.getBoxAccess().getHeight_length_widthKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getHeightFLOATParserRuleCall_0_3_0());
					}
					lv_height_3_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"height",
							lv_height_3_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getLengthFLOATParserRuleCall_0_4_0());
					}
					lv_length_4_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"length",
							lv_length_4_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getWidthFLOATParserRuleCall_0_5_0());
					}
					lv_width_5_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"width",
							lv_width_5_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_6='height'
			{
				newLeafNode(otherlv_6, grammarAccess.getBoxAccess().getHeightKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getHeightFLOATParserRuleCall_1_1_0());
					}
					lv_height_7_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"height",
							lv_height_7_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8='length'
			{
				newLeafNode(otherlv_8, grammarAccess.getBoxAccess().getLengthKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getLengthFLOATParserRuleCall_1_3_0());
					}
					lv_length_9_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"length",
							lv_length_9_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10='width'
			{
				newLeafNode(otherlv_10, grammarAccess.getBoxAccess().getWidthKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBoxAccess().getWidthFLOATParserRuleCall_1_5_0());
					}
					lv_width_11_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoxRule());
						}
						set(
							$current,
							"width",
							lv_width_11_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCylinder
entryRuleCylinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderRule()); }
	iv_ruleCylinder=ruleCylinder
	{ $current=$iv_ruleCylinder.current; }
	EOF;

// Rule Cylinder
ruleCylinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cylinder'
		{
			newLeafNode(otherlv_0, grammarAccess.getCylinderAccess().getCylinderKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCylinderAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCylinderRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='radius'
		{
			newLeafNode(otherlv_2, grammarAccess.getCylinderAccess().getRadiusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getRadiusFLOATParserRuleCall_3_0());
				}
				lv_radius_3_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"radius",
						lv_radius_3_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='length'
		{
			newLeafNode(otherlv_4, grammarAccess.getCylinderAccess().getLengthKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderAccess().getLengthFLOATParserRuleCall_5_0());
				}
				lv_length_5_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderRule());
					}
					set(
						$current,
						"length",
						lv_length_5_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMesh
entryRuleMesh returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeshRule()); }
	iv_ruleMesh=ruleMesh
	{ $current=$iv_ruleMesh.current; }
	EOF;

// Rule Mesh
ruleMesh returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mesh'
		{
			newLeafNode(otherlv_0, grammarAccess.getMeshAccess().getMeshKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMeshAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMeshRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='pathToFile'
		{
			newLeafNode(otherlv_2, grammarAccess.getMeshAccess().getPathToFileKeyword_2());
		}
		(
			(
				lv_pathToFile_3_0=RULE_STRING
				{
					newLeafNode(lv_pathToFile_3_0, grammarAccess.getMeshAccess().getPathToFileSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMeshRule());
					}
					setWithLastConsumed(
						$current,
						"pathToFile",
						lv_pathToFile_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4='scale'
			{
				newLeafNode(otherlv_4, grammarAccess.getMeshAccess().getScaleKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMeshRule());
						}
					}
					otherlv_5=RULE_STRING
					{
						newLeafNode(otherlv_5, grammarAccess.getMeshAccess().getBoxBoxCrossReference_4_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSphere
entryRuleSphere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSphereRule()); }
	iv_ruleSphere=ruleSphere
	{ $current=$iv_ruleSphere.current; }
	EOF;

// Rule Sphere
ruleSphere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sphere'
		{
			newLeafNode(otherlv_0, grammarAccess.getSphereAccess().getSphereKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSphereAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSphereRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='radius'
		{
			newLeafNode(otherlv_2, grammarAccess.getSphereAccess().getRadiusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSphereAccess().getRadiusFLOATParserRuleCall_3_0());
				}
				lv_radius_3_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSphereRule());
					}
					set(
						$current,
						"radius",
						lv_radius_3_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getLimitAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLimitRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			otherlv_1='lower'
			{
				newLeafNode(otherlv_1, grammarAccess.getLimitAccess().getLowerKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getLowerFLOATParserRuleCall_1_1_0());
					}
					lv_lower_2_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"lower",
							lv_lower_2_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='upper'
			{
				newLeafNode(otherlv_3, grammarAccess.getLimitAccess().getUpperKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitAccess().getUpperFLOATParserRuleCall_2_1_0());
					}
					lv_upper_4_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitRule());
						}
						set(
							$current,
							"upper",
							lv_upper_4_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='effort'
		{
			newLeafNode(otherlv_5, grammarAccess.getLimitAccess().getEffortKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLimitAccess().getEffortFLOATParserRuleCall_4_0());
				}
				lv_effort_6_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLimitRule());
					}
					set(
						$current,
						"effort",
						lv_effort_6_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='velocity'
		{
			newLeafNode(otherlv_7, grammarAccess.getLimitAccess().getVelocityKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLimitAccess().getVelocityFLOATParserRuleCall_6_0());
				}
				lv_velocity_8_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLimitRule());
					}
					set(
						$current,
						"velocity",
						lv_velocity_8_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAxis
entryRuleAxis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAxisRule()); }
	iv_ruleAxis=ruleAxis
	{ $current=$iv_ruleAxis.current; }
	EOF;

// Rule Axis
ruleAxis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_ID
					{
						newLeafNode(lv_name_0_0, grammarAccess.getAxisAccess().getNameIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_1='xyz'
			{
				newLeafNode(otherlv_1, grammarAccess.getAxisAccess().getXyzKeyword_0_1());
			}
			(
				(
					lv_x_2_0=RULE_INT
					{
						newLeafNode(lv_x_2_0, grammarAccess.getAxisAccess().getXINTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"x",
							lv_x_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_y_3_0=RULE_INT
					{
						newLeafNode(lv_y_3_0, grammarAccess.getAxisAccess().getYINTTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"y",
							lv_y_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_z_4_0=RULE_INT
					{
						newLeafNode(lv_z_4_0, grammarAccess.getAxisAccess().getZINTTerminalRuleCall_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"z",
							lv_z_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_5='x'
			{
				newLeafNode(otherlv_5, grammarAccess.getAxisAccess().getXKeyword_1_0());
			}
			(
				(
					lv_x_6_0=RULE_INT
					{
						newLeafNode(lv_x_6_0, grammarAccess.getAxisAccess().getXINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"x",
							lv_x_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_7='y'
			{
				newLeafNode(otherlv_7, grammarAccess.getAxisAccess().getYKeyword_1_2());
			}
			(
				(
					lv_y_8_0=RULE_INT
					{
						newLeafNode(lv_y_8_0, grammarAccess.getAxisAccess().getYINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"y",
							lv_y_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_9='z'
			{
				newLeafNode(otherlv_9, grammarAccess.getAxisAccess().getZKeyword_1_4());
			}
			(
				(
					lv_z_10_0=RULE_INT
					{
						newLeafNode(lv_z_10_0, grammarAccess.getAxisAccess().getZINTTerminalRuleCall_1_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAxisRule());
						}
						setWithLastConsumed(
							$current,
							"z",
							lv_z_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCalibration
entryRuleCalibration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCalibrationRule()); }
	iv_ruleCalibration=ruleCalibration
	{ $current=$iv_ruleCalibration.current; }
	EOF;

// Rule Calibration
ruleCalibration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCalibrationAccess().getCalibrationAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCalibrationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCalibrationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			otherlv_2='rising'
			{
				newLeafNode(otherlv_2, grammarAccess.getCalibrationAccess().getRisingKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCalibrationAccess().getRisingFLOATParserRuleCall_2_1_0());
					}
					lv_rising_3_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCalibrationRule());
						}
						set(
							$current,
							"rising",
							lv_rising_3_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='falling'
			{
				newLeafNode(otherlv_4, grammarAccess.getCalibrationAccess().getFallingKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCalibrationAccess().getFallingFLOATParserRuleCall_3_1_0());
					}
					lv_falling_5_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCalibrationRule());
						}
						set(
							$current,
							"falling",
							lv_falling_5_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDynamics
entryRuleDynamics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDynamicsRule()); }
	iv_ruleDynamics=ruleDynamics
	{ $current=$iv_ruleDynamics.current; }
	EOF;

// Rule Dynamics
ruleDynamics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDynamicsAccess().getDynamicsAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDynamicsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDynamicsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			otherlv_2='friction'
			{
				newLeafNode(otherlv_2, grammarAccess.getDynamicsAccess().getFrictionKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDynamicsAccess().getFrictionFLOATParserRuleCall_2_1_0());
					}
					lv_friction_3_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDynamicsRule());
						}
						set(
							$current,
							"friction",
							lv_friction_3_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='damping'
			{
				newLeafNode(otherlv_4, grammarAccess.getDynamicsAccess().getDampingKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDynamicsAccess().getDampingFLOATParserRuleCall_3_1_0());
					}
					lv_damping_5_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDynamicsRule());
						}
						set(
							$current,
							"damping",
							lv_damping_5_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMimic
entryRuleMimic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMimicRule()); }
	iv_ruleMimic=ruleMimic
	{ $current=$iv_ruleMimic.current; }
	EOF;

// Rule Mimic
ruleMimic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMimicAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMimicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_1='mimics'
		{
			newLeafNode(otherlv_1, grammarAccess.getMimicAccess().getMimicsKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMimicRule());
					}
				}
				otherlv_2=RULE_STRING
				{
					newLeafNode(otherlv_2, grammarAccess.getMimicAccess().getMimicsJointCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3='multiplier'
			{
				newLeafNode(otherlv_3, grammarAccess.getMimicAccess().getMultiplierKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMimicAccess().getMultiplierFLOATParserRuleCall_3_1_0());
					}
					lv_multiplier_4_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMimicRule());
						}
						set(
							$current,
							"multiplier",
							lv_multiplier_4_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='offSet'
			{
				newLeafNode(otherlv_5, grammarAccess.getMimicAccess().getOffSetKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMimicAccess().getOffSetFLOATParserRuleCall_4_1_0());
					}
					lv_offSet_6_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMimicRule());
						}
						set(
							$current,
							"offSet",
							lv_offSet_6_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSafetyController
entryRuleSafetyController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSafetyControllerRule()); }
	iv_ruleSafetyController=ruleSafetyController
	{ $current=$iv_ruleSafetyController.current; }
	EOF;

// Rule SafetyController
ruleSafetyController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSafetyControllerAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSafetyControllerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			otherlv_1='softLowerLimit'
			{
				newLeafNode(otherlv_1, grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitFLOATParserRuleCall_1_1_0());
					}
					lv_softLowerLimit_2_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
						}
						set(
							$current,
							"softLowerLimit",
							lv_softLowerLimit_2_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='softUpperLimit'
			{
				newLeafNode(otherlv_3, grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitFLOATParserRuleCall_2_1_0());
					}
					lv_softUpperLimit_4_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
						}
						set(
							$current,
							"softUpperLimit",
							lv_softUpperLimit_4_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='k_position'
			{
				newLeafNode(otherlv_5, grammarAccess.getSafetyControllerAccess().getK_positionKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSafetyControllerAccess().getK_positionFLOATParserRuleCall_3_1_0());
					}
					lv_k_position_6_0=ruleFLOAT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
						}
						set(
							$current,
							"k_position",
							lv_k_position_6_0,
							"org.xtext.urdf.Dsl.FLOAT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='k_velocity'
		{
			newLeafNode(otherlv_7, grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSafetyControllerAccess().getK_velocityFLOATParserRuleCall_5_0());
				}
				lv_k_velocity_8_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSafetyControllerRule());
					}
					set(
						$current,
						"k_velocity",
						lv_k_velocity_8_0,
						"org.xtext.urdf.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFLOAT
entryRuleFLOAT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFLOATRule()); }
	iv_ruleFLOAT=ruleFLOAT
	{ $current=$iv_ruleFLOAT.current.getText(); }
	EOF;

// Rule FLOAT
ruleFLOAT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFLOATAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Rule JointType
ruleJointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Revolute'
			{
				$current = grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Continous'
			{
				$current = grammarAccess.getJointTypeAccess().getContinousEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getJointTypeAccess().getContinousEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Fixed'
			{
				$current = grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Prismatic'
			{
				$current = grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
