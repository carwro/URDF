/*
 * generated by Xtext 2.10.0
 */
package org.xtext.urdf.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtext.urdf.ide.contentassist.antlr.internal.InternalDslParser;
import org.xtext.urdf.services.DslGrammarAccess;

public class DslParser extends AbstractContentAssistParser {

	@Inject
	private DslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalDslParser createParser() {
		InternalDslParser result = new InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getMaterialAccess().getAlternatives(), "rule__Material__Alternatives");
					put(grammarAccess.getGeometryAccess().getAlternatives(), "rule__Geometry__Alternatives");
					put(grammarAccess.getNLAccess().getAlternatives(), "rule__NL__Alternatives");
					put(grammarAccess.getJointTypeAccess().getAlternatives(), "rule__JointType__Alternatives");
					put(grammarAccess.getRobotAccess().getGroup(), "rule__Robot__Group__0");
					put(grammarAccess.getRobotAccess().getGroup_3(), "rule__Robot__Group_3__0");
					put(grammarAccess.getRobotAccess().getGroup_4(), "rule__Robot__Group_4__0");
					put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
					put(grammarAccess.getLinkAccess().getGroup_3(), "rule__Link__Group_3__0");
					put(grammarAccess.getLinkAccess().getGroup_4(), "rule__Link__Group_4__0");
					put(grammarAccess.getLinkAccess().getGroup_5(), "rule__Link__Group_5__0");
					put(grammarAccess.getJointAccess().getGroup(), "rule__Joint__Group__0");
					put(grammarAccess.getJointAccess().getGroup_2(), "rule__Joint__Group_2__0");
					put(grammarAccess.getJointAccess().getGroup_10(), "rule__Joint__Group_10__0");
					put(grammarAccess.getJointAccess().getGroup_11(), "rule__Joint__Group_11__0");
					put(grammarAccess.getJointAccess().getGroup_14(), "rule__Joint__Group_14__0");
					put(grammarAccess.getJointAccess().getGroup_15(), "rule__Joint__Group_15__0");
					put(grammarAccess.getJointAccess().getGroup_16(), "rule__Joint__Group_16__0");
					put(grammarAccess.getJointAccess().getGroup_17(), "rule__Joint__Group_17__0");
					put(grammarAccess.getInertialAccess().getGroup(), "rule__Inertial__Group__0");
					put(grammarAccess.getInertialAccess().getGroup_2(), "rule__Inertial__Group_2__0");
					put(grammarAccess.getInertialAccess().getGroup_2_2(), "rule__Inertial__Group_2_2__0");
					put(grammarAccess.getInertialAccess().getGroup_3(), "rule__Inertial__Group_3__0");
					put(grammarAccess.getVisualAccess().getGroup(), "rule__Visual__Group__0");
					put(grammarAccess.getVisualAccess().getGroup_0(), "rule__Visual__Group_0__0");
					put(grammarAccess.getCollisionAccess().getGroup(), "rule__Collision__Group__0");
					put(grammarAccess.getOriginAccess().getGroup(), "rule__Origin__Group__0");
					put(grammarAccess.getOriginAccess().getGroup_1(), "rule__Origin__Group_1__0");
					put(grammarAccess.getOriginAccess().getGroup_2(), "rule__Origin__Group_2__0");
					put(grammarAccess.getOriginAccess().getGroup_3(), "rule__Origin__Group_3__0");
					put(grammarAccess.getOriginAccess().getGroup_4(), "rule__Origin__Group_4__0");
					put(grammarAccess.getOriginAccess().getGroup_5(), "rule__Origin__Group_5__0");
					put(grammarAccess.getOriginAccess().getGroup_6(), "rule__Origin__Group_6__0");
					put(grammarAccess.getMassAccess().getGroup(), "rule__Mass__Group__0");
					put(grammarAccess.getInertiaAccess().getGroup(), "rule__Inertia__Group__0");
					put(grammarAccess.getMaterial_ImplAccess().getGroup(), "rule__Material_Impl__Group__0");
					put(grammarAccess.getGeometry_ImplAccess().getGroup(), "rule__Geometry_Impl__Group__0");
					put(grammarAccess.getColorAccess().getGroup(), "rule__Color__Group__0");
					put(grammarAccess.getTextureAccess().getGroup(), "rule__Texture__Group__0");
					put(grammarAccess.getBoxAccess().getGroup(), "rule__Box__Group__0");
					put(grammarAccess.getCylinderAccess().getGroup(), "rule__Cylinder__Group__0");
					put(grammarAccess.getMeshAccess().getGroup(), "rule__Mesh__Group__0");
					put(grammarAccess.getSphereAccess().getGroup(), "rule__Sphere__Group__0");
					put(grammarAccess.getLimitAccess().getGroup(), "rule__Limit__Group__0");
					put(grammarAccess.getLimitAccess().getGroup_1(), "rule__Limit__Group_1__0");
					put(grammarAccess.getLimitAccess().getGroup_2(), "rule__Limit__Group_2__0");
					put(grammarAccess.getLimitAccess().getGroup_3(), "rule__Limit__Group_3__0");
					put(grammarAccess.getLimitAccess().getGroup_4(), "rule__Limit__Group_4__0");
					put(grammarAccess.getAxisAccess().getGroup(), "rule__Axis__Group__0");
					put(grammarAccess.getAxisAccess().getGroup_1(), "rule__Axis__Group_1__0");
					put(grammarAccess.getAxisAccess().getGroup_2(), "rule__Axis__Group_2__0");
					put(grammarAccess.getAxisAccess().getGroup_3(), "rule__Axis__Group_3__0");
					put(grammarAccess.getCallibrationAccess().getGroup(), "rule__Callibration__Group__0");
					put(grammarAccess.getCallibrationAccess().getGroup_1(), "rule__Callibration__Group_1__0");
					put(grammarAccess.getCallibrationAccess().getGroup_2(), "rule__Callibration__Group_2__0");
					put(grammarAccess.getDynamicsAccess().getGroup(), "rule__Dynamics__Group__0");
					put(grammarAccess.getDynamicsAccess().getGroup_1(), "rule__Dynamics__Group_1__0");
					put(grammarAccess.getDynamicsAccess().getGroup_2(), "rule__Dynamics__Group_2__0");
					put(grammarAccess.getMimicAccess().getGroup(), "rule__Mimic__Group__0");
					put(grammarAccess.getMimicAccess().getGroup_1(), "rule__Mimic__Group_1__0");
					put(grammarAccess.getMimicAccess().getGroup_2(), "rule__Mimic__Group_2__0");
					put(grammarAccess.getMimicAccess().getGroup_3(), "rule__Mimic__Group_3__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup(), "rule__SafetyController__Group__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup_1(), "rule__SafetyController__Group_1__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup_2(), "rule__SafetyController__Group_2__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup_3(), "rule__SafetyController__Group_3__0");
					put(grammarAccess.getSafetyControllerAccess().getGroup_4(), "rule__SafetyController__Group_4__0");
					put(grammarAccess.getRobotAccess().getNameAssignment_1(), "rule__Robot__NameAssignment_1");
					put(grammarAccess.getRobotAccess().getLinkAssignment_2(), "rule__Robot__LinkAssignment_2");
					put(grammarAccess.getRobotAccess().getLinkAssignment_3_1(), "rule__Robot__LinkAssignment_3_1");
					put(grammarAccess.getRobotAccess().getJointAssignment_4_0(), "rule__Robot__JointAssignment_4_0");
					put(grammarAccess.getRobotAccess().getJointAssignment_4_1(), "rule__Robot__JointAssignment_4_1");
					put(grammarAccess.getLinkAccess().getNameAssignment_2(), "rule__Link__NameAssignment_2");
					put(grammarAccess.getLinkAccess().getInertialAssignment_3_1(), "rule__Link__InertialAssignment_3_1");
					put(grammarAccess.getLinkAccess().getInertialAssignment_3_2(), "rule__Link__InertialAssignment_3_2");
					put(grammarAccess.getLinkAccess().getVisualsAssignment_4_1(), "rule__Link__VisualsAssignment_4_1");
					put(grammarAccess.getLinkAccess().getVisualsAssignment_4_2(), "rule__Link__VisualsAssignment_4_2");
					put(grammarAccess.getLinkAccess().getCollisionAssignment_5_1(), "rule__Link__CollisionAssignment_5_1");
					put(grammarAccess.getLinkAccess().getCollisionAssignment_5_2(), "rule__Link__CollisionAssignment_5_2");
					put(grammarAccess.getJointAccess().getNameAssignment_1(), "rule__Joint__NameAssignment_1");
					put(grammarAccess.getJointAccess().getTypeAssignment_2_1(), "rule__Joint__TypeAssignment_2_1");
					put(grammarAccess.getJointAccess().getChildOfAssignment_5(), "rule__Joint__ChildOfAssignment_5");
					put(grammarAccess.getJointAccess().getChildOfAssignment_6(), "rule__Joint__ChildOfAssignment_6");
					put(grammarAccess.getJointAccess().getParentOfAssignment_9(), "rule__Joint__ParentOfAssignment_9");
					put(grammarAccess.getJointAccess().getLimitAssignment_10_1(), "rule__Joint__LimitAssignment_10_1");
					put(grammarAccess.getJointAccess().getAxisAssignment_11_1(), "rule__Joint__AxisAssignment_11_1");
					put(grammarAccess.getJointAccess().getOriginAssignment_13(), "rule__Joint__OriginAssignment_13");
					put(grammarAccess.getJointAccess().getCallibrationAssignment_14_1(), "rule__Joint__CallibrationAssignment_14_1");
					put(grammarAccess.getJointAccess().getDynamicsAssignment_15_1(), "rule__Joint__DynamicsAssignment_15_1");
					put(grammarAccess.getJointAccess().getMimicAssignment_16_1(), "rule__Joint__MimicAssignment_16_1");
					put(grammarAccess.getJointAccess().getSafetycontrollerAssignment_17_1(), "rule__Joint__SafetycontrollerAssignment_17_1");
					put(grammarAccess.getInertialAccess().getOriginAssignment_1(), "rule__Inertial__OriginAssignment_1");
					put(grammarAccess.getInertialAccess().getMassAssignment_2_1(), "rule__Inertial__MassAssignment_2_1");
					put(grammarAccess.getInertialAccess().getMassAssignment_2_2_1(), "rule__Inertial__MassAssignment_2_2_1");
					put(grammarAccess.getInertialAccess().getInertiaAssignment_3_1(), "rule__Inertial__InertiaAssignment_3_1");
					put(grammarAccess.getInertialAccess().getInertiaAssignment_3_2(), "rule__Inertial__InertiaAssignment_3_2");
					put(grammarAccess.getVisualAccess().getMaterialAssignment_0_1(), "rule__Visual__MaterialAssignment_0_1");
					put(grammarAccess.getVisualAccess().getOriginAssignment_2(), "rule__Visual__OriginAssignment_2");
					put(grammarAccess.getVisualAccess().getGeometryAssignment_4(), "rule__Visual__GeometryAssignment_4");
					put(grammarAccess.getCollisionAccess().getGeometryAssignment_1(), "rule__Collision__GeometryAssignment_1");
					put(grammarAccess.getCollisionAccess().getOriginAssignment_3(), "rule__Collision__OriginAssignment_3");
					put(grammarAccess.getOriginAccess().getXAssignment_1_1(), "rule__Origin__XAssignment_1_1");
					put(grammarAccess.getOriginAccess().getYAssignment_2_1(), "rule__Origin__YAssignment_2_1");
					put(grammarAccess.getOriginAccess().getZAssignment_3_1(), "rule__Origin__ZAssignment_3_1");
					put(grammarAccess.getOriginAccess().getRollAssignment_4_1(), "rule__Origin__RollAssignment_4_1");
					put(grammarAccess.getOriginAccess().getPitchAssignment_5_1(), "rule__Origin__PitchAssignment_5_1");
					put(grammarAccess.getOriginAccess().getYawAssignment_6_1(), "rule__Origin__YawAssignment_6_1");
					put(grammarAccess.getLimitAccess().getLowerAssignment_1_1(), "rule__Limit__LowerAssignment_1_1");
					put(grammarAccess.getLimitAccess().getUpperAssignment_2_1(), "rule__Limit__UpperAssignment_2_1");
					put(grammarAccess.getLimitAccess().getEffortAssignment_3_1(), "rule__Limit__EffortAssignment_3_1");
					put(grammarAccess.getLimitAccess().getVelocityAssignment_4_1(), "rule__Limit__VelocityAssignment_4_1");
					put(grammarAccess.getAxisAccess().getXAssignment_1_1(), "rule__Axis__XAssignment_1_1");
					put(grammarAccess.getAxisAccess().getYAssignment_2_1(), "rule__Axis__YAssignment_2_1");
					put(grammarAccess.getAxisAccess().getZAssignment_3_1(), "rule__Axis__ZAssignment_3_1");
					put(grammarAccess.getCallibrationAccess().getRisingAssignment_1_1(), "rule__Callibration__RisingAssignment_1_1");
					put(grammarAccess.getCallibrationAccess().getFallingAssignment_2_1(), "rule__Callibration__FallingAssignment_2_1");
					put(grammarAccess.getDynamicsAccess().getFrictionAssignment_1_1(), "rule__Dynamics__FrictionAssignment_1_1");
					put(grammarAccess.getDynamicsAccess().getDampingAssignment_2_1(), "rule__Dynamics__DampingAssignment_2_1");
					put(grammarAccess.getMimicAccess().getJointAssignment_1_1(), "rule__Mimic__JointAssignment_1_1");
					put(grammarAccess.getMimicAccess().getMultiplierAssignment_2_1(), "rule__Mimic__MultiplierAssignment_2_1");
					put(grammarAccess.getMimicAccess().getOffSetAssignment_3_1(), "rule__Mimic__OffSetAssignment_3_1");
					put(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_1_1(), "rule__SafetyController__SoftLowerLimitAssignment_1_1");
					put(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_2_1(), "rule__SafetyController__SoftUpperLimitAssignment_2_1");
					put(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_3_1(), "rule__SafetyController__K_positionAssignment_3_1");
					put(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_4_1(), "rule__SafetyController__K_velocityAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalDslParser typedParser = (InternalDslParser) parser;
			typedParser.entryRuleRobot();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
