/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.urdf.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.urdf.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.urdf.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaterial
entryRuleMaterial
:
{ before(grammarAccess.getMaterialRule()); }
	 ruleMaterial
{ after(grammarAccess.getMaterialRule()); } 
	 EOF 
;

// Rule Material
ruleMaterial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaterialAccess().getAlternatives()); }
		(rule__Material__Alternatives)
		{ after(grammarAccess.getMaterialAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry
entryRuleGeometry
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometryAccess().getAlternatives()); }
		(rule__Geometry__Alternatives)
		{ after(grammarAccess.getGeometryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoint
entryRuleJoint
:
{ before(grammarAccess.getJointRule()); }
	 ruleJoint
{ after(grammarAccess.getJointRule()); } 
	 EOF 
;

// Rule Joint
ruleJoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJointAccess().getGroup()); }
		(rule__Joint__Group__0)
		{ after(grammarAccess.getJointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertial
entryRuleInertial
:
{ before(grammarAccess.getInertialRule()); }
	 ruleInertial
{ after(grammarAccess.getInertialRule()); } 
	 EOF 
;

// Rule Inertial
ruleInertial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertialAccess().getGroup()); }
		(rule__Inertial__Group__0)
		{ after(grammarAccess.getInertialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisual
entryRuleVisual
:
{ before(grammarAccess.getVisualRule()); }
	 ruleVisual
{ after(grammarAccess.getVisualRule()); } 
	 EOF 
;

// Rule Visual
ruleVisual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualAccess().getGroup()); }
		(rule__Visual__Group__0)
		{ after(grammarAccess.getVisualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollision
entryRuleCollision
:
{ before(grammarAccess.getCollisionRule()); }
	 ruleCollision
{ after(grammarAccess.getCollisionRule()); } 
	 EOF 
;

// Rule Collision
ruleCollision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollisionAccess().getGroup()); }
		(rule__Collision__Group__0)
		{ after(grammarAccess.getCollisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrigin
entryRuleOrigin
:
{ before(grammarAccess.getOriginRule()); }
	 ruleOrigin
{ after(grammarAccess.getOriginRule()); } 
	 EOF 
;

// Rule Origin
ruleOrigin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOriginAccess().getGroup()); }
		(rule__Origin__Group__0)
		{ after(grammarAccess.getOriginAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMass
entryRuleMass
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMassAccess().getGroup()); }
		(rule__Mass__Group__0)
		{ after(grammarAccess.getMassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertia
entryRuleInertia
:
{ before(grammarAccess.getInertiaRule()); }
	 ruleInertia
{ after(grammarAccess.getInertiaRule()); } 
	 EOF 
;

// Rule Inertia
ruleInertia 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertiaAccess().getGroup()); }
		(rule__Inertia__Group__0)
		{ after(grammarAccess.getInertiaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getGroup()); }
		(rule__Color__Group__0)
		{ after(grammarAccess.getColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTexture
entryRuleTexture
:
{ before(grammarAccess.getTextureRule()); }
	 ruleTexture
{ after(grammarAccess.getTextureRule()); } 
	 EOF 
;

// Rule Texture
ruleTexture 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextureAccess().getGroup()); }
		(rule__Texture__Group__0)
		{ after(grammarAccess.getTextureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBox
entryRuleBox
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoxAccess().getGroup()); }
		(rule__Box__Group__0)
		{ after(grammarAccess.getBoxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCylinder
entryRuleCylinder
:
{ before(grammarAccess.getCylinderRule()); }
	 ruleCylinder
{ after(grammarAccess.getCylinderRule()); } 
	 EOF 
;

// Rule Cylinder
ruleCylinder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCylinderAccess().getGroup()); }
		(rule__Cylinder__Group__0)
		{ after(grammarAccess.getCylinderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMesh
entryRuleMesh
:
{ before(grammarAccess.getMeshRule()); }
	 ruleMesh
{ after(grammarAccess.getMeshRule()); } 
	 EOF 
;

// Rule Mesh
ruleMesh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeshAccess().getGroup()); }
		(rule__Mesh__Group__0)
		{ after(grammarAccess.getMeshAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSphere
entryRuleSphere
:
{ before(grammarAccess.getSphereRule()); }
	 ruleSphere
{ after(grammarAccess.getSphereRule()); } 
	 EOF 
;

// Rule Sphere
ruleSphere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSphereAccess().getGroup()); }
		(rule__Sphere__Group__0)
		{ after(grammarAccess.getSphereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLimit
entryRuleLimit
:
{ before(grammarAccess.getLimitRule()); }
	 ruleLimit
{ after(grammarAccess.getLimitRule()); } 
	 EOF 
;

// Rule Limit
ruleLimit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLimitAccess().getGroup()); }
		(rule__Limit__Group__0)
		{ after(grammarAccess.getLimitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAxis
entryRuleAxis
:
{ before(grammarAccess.getAxisRule()); }
	 ruleAxis
{ after(grammarAccess.getAxisRule()); } 
	 EOF 
;

// Rule Axis
ruleAxis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAxisAccess().getGroup()); }
		(rule__Axis__Group__0)
		{ after(grammarAccess.getAxisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalibration
entryRuleCalibration
:
{ before(grammarAccess.getCalibrationRule()); }
	 ruleCalibration
{ after(grammarAccess.getCalibrationRule()); } 
	 EOF 
;

// Rule Calibration
ruleCalibration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalibrationAccess().getGroup()); }
		(rule__Calibration__Group__0)
		{ after(grammarAccess.getCalibrationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDynamics
entryRuleDynamics
:
{ before(grammarAccess.getDynamicsRule()); }
	 ruleDynamics
{ after(grammarAccess.getDynamicsRule()); } 
	 EOF 
;

// Rule Dynamics
ruleDynamics 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDynamicsAccess().getGroup()); }
		(rule__Dynamics__Group__0)
		{ after(grammarAccess.getDynamicsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMimic
entryRuleMimic
:
{ before(grammarAccess.getMimicRule()); }
	 ruleMimic
{ after(grammarAccess.getMimicRule()); } 
	 EOF 
;

// Rule Mimic
ruleMimic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMimicAccess().getGroup()); }
		(rule__Mimic__Group__0)
		{ after(grammarAccess.getMimicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSafetyController
entryRuleSafetyController
:
{ before(grammarAccess.getSafetyControllerRule()); }
	 ruleSafetyController
{ after(grammarAccess.getSafetyControllerRule()); } 
	 EOF 
;

// Rule SafetyController
ruleSafetyController 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getGroup()); }
		(rule__SafetyController__Group__0)
		{ after(grammarAccess.getSafetyControllerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLOAT
entryRuleFLOAT
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;

// Rule FLOAT
ruleFLOAT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOATAccess().getGroup()); }
		(rule__FLOAT__Group__0)
		{ after(grammarAccess.getFLOATAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSCIENTIFIC
entryRuleSCIENTIFIC
:
{ before(grammarAccess.getSCIENTIFICRule()); }
	 ruleSCIENTIFIC
{ after(grammarAccess.getSCIENTIFICRule()); } 
	 EOF 
;

// Rule SCIENTIFIC
ruleSCIENTIFIC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSCIENTIFICAccess().getGroup()); }
		(rule__SCIENTIFIC__Group__0)
		{ after(grammarAccess.getSCIENTIFICAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIGNED_NUMERIC
entryRuleSIGNED_NUMERIC
:
{ before(grammarAccess.getSIGNED_NUMERICRule()); }
	 ruleSIGNED_NUMERIC
{ after(grammarAccess.getSIGNED_NUMERICRule()); } 
	 EOF 
;

// Rule SIGNED_NUMERIC
ruleSIGNED_NUMERIC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getGroup()); }
		(rule__SIGNED_NUMERIC__Group__0)
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMEASURE
entryRuleMEASURE
:
{ before(grammarAccess.getMEASURERule()); }
	 ruleMEASURE
{ after(grammarAccess.getMEASURERule()); } 
	 EOF 
;

// Rule MEASURE
ruleMEASURE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMEASUREAccess().getAlternatives()); }
		(rule__MEASURE__Alternatives)
		{ after(grammarAccess.getMEASUREAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule JointType
ruleJointType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointTypeAccess().getAlternatives()); }
		(rule__JointType__Alternatives)
		{ after(grammarAccess.getJointTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getLinkAssignment_2_0()); }
		(rule__Robot__LinkAssignment_2_0)
		{ after(grammarAccess.getRobotAccess().getLinkAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRobotAccess().getJointAssignment_2_1()); }
		(rule__Robot__JointAssignment_2_1)
		{ after(grammarAccess.getRobotAccess().getJointAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Material__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaterialAccess().getColorParserRuleCall_0()); }
		ruleColor
		{ after(grammarAccess.getMaterialAccess().getColorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMaterialAccess().getTextureParserRuleCall_1()); }
		ruleTexture
		{ after(grammarAccess.getMaterialAccess().getTextureParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getBoxParserRuleCall_0()); }
		ruleBox
		{ after(grammarAccess.getGeometryAccess().getBoxParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_1()); }
		ruleCylinder
		{ after(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getMeshParserRuleCall_2()); }
		ruleMesh
		{ after(grammarAccess.getGeometryAccess().getMeshParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getSphereParserRuleCall_3()); }
		ruleSphere
		{ after(grammarAccess.getGeometryAccess().getSphereParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSCIENTIFICAccess().getPlusSignKeyword_2_0()); }
		'+'
		{ after(grammarAccess.getSCIENTIFICAccess().getPlusSignKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSCIENTIFICAccess().getHyphenMinusKeyword_2_1()); }
		'-'
		{ after(grammarAccess.getSCIENTIFICAccess().getHyphenMinusKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getINTTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getFLOATParserRuleCall_1_1()); }
		ruleFLOAT
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getFLOATParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSIGNED_NUMERICAccess().getSCIENTIFICParserRuleCall_1_2()); }
		ruleSCIENTIFIC
		{ after(grammarAccess.getSIGNED_NUMERICAccess().getSCIENTIFICParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MEASURE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMEASUREAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getMEASUREAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMEASUREAccess().getFLOATParserRuleCall_1()); }
		ruleFLOAT
		{ after(grammarAccess.getMEASUREAccess().getFLOATParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_0()); }
		('Fixed')
		{ after(grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_1()); }
		('Revolute')
		{ after(grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_2()); }
		('Prismatic')
		{ after(grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getContinuousEnumLiteralDeclaration_3()); }
		('Continuous')
		{ after(grammarAccess.getJointTypeAccess().getContinuousEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_1()); }
	(rule__Robot__NameAssignment_1)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getAlternatives_2()); }
	(rule__Robot__Alternatives_2)*
	{ after(grammarAccess.getRobotAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
	'Link'
	{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameAssignment_1()); }
	(rule__Link__NameAssignment_1)
	{ after(grammarAccess.getLinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualsAssignment_2()); }
	(rule__Link__VisualsAssignment_2)*
	{ after(grammarAccess.getLinkAccess().getVisualsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
	rule__Link__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialAssignment_3()); }
	(rule__Link__InertialAssignment_3)*
	{ after(grammarAccess.getLinkAccess().getInertialAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionAssignment_4()); }
	(rule__Link__CollisionAssignment_4)*
	{ after(grammarAccess.getLinkAccess().getCollisionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__0__Impl
	rule__Joint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getJointKeyword_0()); }
	'Joint'
	{ after(grammarAccess.getJointAccess().getJointKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__1__Impl
	rule__Joint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getNameAssignment_1()); }
	(rule__Joint__NameAssignment_1)
	{ after(grammarAccess.getJointAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__2__Impl
	rule__Joint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeKeyword_2()); }
	'Type'
	{ after(grammarAccess.getJointAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__3__Impl
	rule__Joint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeAssignment_3()); }
	(rule__Joint__TypeAssignment_3)
	{ after(grammarAccess.getJointAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__4__Impl
	rule__Joint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildOfKeyword_4()); }
	'ChildOf'
	{ after(grammarAccess.getJointAccess().getChildOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__5__Impl
	rule__Joint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildOfAssignment_5()); }
	(rule__Joint__ChildOfAssignment_5)
	{ after(grammarAccess.getJointAccess().getChildOfAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__6__Impl
	rule__Joint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentOfKeyword_6()); }
	'ParentOf'
	{ after(grammarAccess.getJointAccess().getParentOfKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__7__Impl
	rule__Joint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentOfAssignment_7()); }
	(rule__Joint__ParentOfAssignment_7)
	{ after(grammarAccess.getJointAccess().getParentOfAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__8__Impl
	rule__Joint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_8()); }
	(rule__Joint__Group_8__0)?
	{ after(grammarAccess.getJointAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__9__Impl
	rule__Joint__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_9()); }
	(rule__Joint__Group_9__0)?
	{ after(grammarAccess.getJointAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__10__Impl
	rule__Joint__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getOriginAssignment_10()); }
	(rule__Joint__OriginAssignment_10)?
	{ after(grammarAccess.getJointAccess().getOriginAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__11__Impl
	rule__Joint__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_11()); }
	(rule__Joint__Group_11__0)?
	{ after(grammarAccess.getJointAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__12__Impl
	rule__Joint__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_12()); }
	(rule__Joint__Group_12__0)?
	{ after(grammarAccess.getJointAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__13__Impl
	rule__Joint__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_13()); }
	(rule__Joint__Group_13__0)?
	{ after(grammarAccess.getJointAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_14()); }
	(rule__Joint__Group_14__0)?
	{ after(grammarAccess.getJointAccess().getGroup_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__0__Impl
	rule__Joint__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitKeyword_8_0()); }
	'Limit'
	{ after(grammarAccess.getJointAccess().getLimitKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitAssignment_8_1()); }
	(rule__Joint__LimitAssignment_8_1)
	{ after(grammarAccess.getJointAccess().getLimitAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_9__0__Impl
	rule__Joint__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisKeyword_9_0()); }
	'Axis'
	{ after(grammarAccess.getJointAccess().getAxisKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisAssignment_9_1()); }
	(rule__Joint__AxisAssignment_9_1)
	{ after(grammarAccess.getJointAccess().getAxisAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_11__0__Impl
	rule__Joint__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getCalibrationKeyword_11_0()); }
	'Calibration'
	{ after(grammarAccess.getJointAccess().getCalibrationKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getCalibrationAssignment_11_1()); }
	(rule__Joint__CalibrationAssignment_11_1)
	{ after(grammarAccess.getJointAccess().getCalibrationAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_12__0__Impl
	rule__Joint__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getDynamicsKeyword_12_0()); }
	'Dynamics'
	{ after(grammarAccess.getJointAccess().getDynamicsKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getDynamicsAssignment_12_1()); }
	(rule__Joint__DynamicsAssignment_12_1)
	{ after(grammarAccess.getJointAccess().getDynamicsAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_13__0__Impl
	rule__Joint__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getMimicKeyword_13_0()); }
	'Mimic'
	{ after(grammarAccess.getJointAccess().getMimicKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getMimicAssignment_13_1()); }
	(rule__Joint__MimicAssignment_13_1)
	{ after(grammarAccess.getJointAccess().getMimicAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_14__0__Impl
	rule__Joint__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getSafetyControllerKeyword_14_0()); }
	'SafetyController'
	{ after(grammarAccess.getJointAccess().getSafetyControllerKeyword_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getSafetycontrollerAssignment_14_1()); }
	(rule__Joint__SafetycontrollerAssignment_14_1)
	{ after(grammarAccess.getJointAccess().getSafetycontrollerAssignment_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__0__Impl
	rule__Inertial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertialKeyword_0()); }
	'Inertial'
	{ after(grammarAccess.getInertialAccess().getInertialKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__1__Impl
	rule__Inertial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getNameAssignment_1()); }
	(rule__Inertial__NameAssignment_1)?
	{ after(grammarAccess.getInertialAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__2__Impl
	rule__Inertial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaAssignment_2()); }
	(rule__Inertial__InertiaAssignment_2)
	{ after(grammarAccess.getInertialAccess().getInertiaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__3__Impl
	rule__Inertial__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassAssignment_3()); }
	(rule__Inertial__MassAssignment_3)
	{ after(grammarAccess.getInertialAccess().getMassAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginAssignment_4()); }
	(rule__Inertial__OriginAssignment_4)?
	{ after(grammarAccess.getInertialAccess().getOriginAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__0__Impl
	rule__Visual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getVisualKeyword_0()); }
	'Visual'
	{ after(grammarAccess.getVisualAccess().getVisualKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__1__Impl
	rule__Visual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getNameAssignment_1()); }
	(rule__Visual__NameAssignment_1)?
	{ after(grammarAccess.getVisualAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__2__Impl
	rule__Visual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryKeyword_2()); }
	'Geometry'
	{ after(grammarAccess.getVisualAccess().getGeometryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__3__Impl
	rule__Visual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
	(rule__Visual__GeometryAssignment_3)
	{ after(grammarAccess.getVisualAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__4__Impl
	rule__Visual__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginAssignment_4()); }
	(rule__Visual__OriginAssignment_4)?
	{ after(grammarAccess.getVisualAccess().getOriginAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGroup_5()); }
	(rule__Visual__Group_5__0)?
	{ after(grammarAccess.getVisualAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_5__0__Impl
	rule__Visual__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getMaterialKeyword_5_0()); }
	'Material'
	{ after(grammarAccess.getVisualAccess().getMaterialKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getMaterialAssignment_5_1()); }
	(rule__Visual__MaterialAssignment_5_1)
	{ after(grammarAccess.getVisualAccess().getMaterialAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__0__Impl
	rule__Collision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getCollisionKeyword_0()); }
	'Collision'
	{ after(grammarAccess.getCollisionAccess().getCollisionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__1__Impl
	rule__Collision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getNameAssignment_1()); }
	(rule__Collision__NameAssignment_1)
	{ after(grammarAccess.getCollisionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__2__Impl
	rule__Collision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryKeyword_2()); }
	'Geometry'
	{ after(grammarAccess.getCollisionAccess().getGeometryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__3__Impl
	rule__Collision__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
	(rule__Collision__GeometryAssignment_3)
	{ after(grammarAccess.getCollisionAccess().getGeometryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginAssignment_4()); }
	(rule__Collision__OriginAssignment_4)?
	{ after(grammarAccess.getCollisionAccess().getOriginAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__0__Impl
	rule__Origin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getOriginKeyword_0()); }
	'Origin'
	{ after(grammarAccess.getOriginAccess().getOriginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__1__Impl
	rule__Origin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getNameAssignment_1()); }
	(rule__Origin__NameAssignment_1)?
	{ after(grammarAccess.getOriginAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__2__Impl
	rule__Origin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getXyzKeyword_2()); }
	'xyz'
	{ after(grammarAccess.getOriginAccess().getXyzKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__3__Impl
	rule__Origin__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getXAssignment_3()); }
	(rule__Origin__XAssignment_3)
	{ after(grammarAccess.getOriginAccess().getXAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__4__Impl
	rule__Origin__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYAssignment_4()); }
	(rule__Origin__YAssignment_4)
	{ after(grammarAccess.getOriginAccess().getYAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__5__Impl
	rule__Origin__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getZAssignment_5()); }
	(rule__Origin__ZAssignment_5)
	{ after(grammarAccess.getOriginAccess().getZAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_6()); }
	(rule__Origin__Group_6__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_6__0__Impl
	rule__Origin__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getRoll_pitch_yawKeyword_6_0()); }
	'roll_pitch_yaw'
	{ after(grammarAccess.getOriginAccess().getRoll_pitch_yawKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_6__1__Impl
	rule__Origin__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getRollAssignment_6_1()); }
	(rule__Origin__RollAssignment_6_1)
	{ after(grammarAccess.getOriginAccess().getRollAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_6__2__Impl
	rule__Origin__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getPitchAssignment_6_2()); }
	(rule__Origin__PitchAssignment_6_2)
	{ after(grammarAccess.getOriginAccess().getPitchAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYawAssignment_6_3()); }
	(rule__Origin__YawAssignment_6_3)
	{ after(grammarAccess.getOriginAccess().getYawAssignment_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassKeyword_0()); }
	'Mass'
	{ after(grammarAccess.getMassAccess().getMassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__1__Impl
	rule__Mass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getNameAssignment_1()); }
	(rule__Mass__NameAssignment_1)?
	{ after(grammarAccess.getMassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__2__Impl
	rule__Mass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassValueInKilogramsKeyword_2()); }
	'massValueInKilograms'
	{ after(grammarAccess.getMassAccess().getMassValueInKilogramsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassValueInKilogramsAssignment_3()); }
	(rule__Mass__MassValueInKilogramsAssignment_3)
	{ after(grammarAccess.getMassAccess().getMassValueInKilogramsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__0__Impl
	rule__Inertia__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaKeyword_0()); }
	'Inertia'
	{ after(grammarAccess.getInertiaAccess().getInertiaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__1__Impl
	rule__Inertia__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getNameAssignment_1()); }
	(rule__Inertia__NameAssignment_1)?
	{ after(grammarAccess.getInertiaAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__2__Impl
	rule__Inertia__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxKeyword_2()); }
	'ixx'
	{ after(grammarAccess.getInertiaAccess().getIxxKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__3__Impl
	rule__Inertia__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxxAssignment_3()); }
	(rule__Inertia__IxxAssignment_3)
	{ after(grammarAccess.getInertiaAccess().getIxxAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__4__Impl
	rule__Inertia__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyKeyword_4()); }
	'ixy'
	{ after(grammarAccess.getInertiaAccess().getIxyKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__5__Impl
	rule__Inertia__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxyAssignment_5()); }
	(rule__Inertia__IxyAssignment_5)
	{ after(grammarAccess.getInertiaAccess().getIxyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__6__Impl
	rule__Inertia__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzKeyword_6()); }
	'ixz'
	{ after(grammarAccess.getInertiaAccess().getIxzKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__7__Impl
	rule__Inertia__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIxzAssignment_7()); }
	(rule__Inertia__IxzAssignment_7)
	{ after(grammarAccess.getInertiaAccess().getIxzAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__8__Impl
	rule__Inertia__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyKeyword_8()); }
	'iyy'
	{ after(grammarAccess.getInertiaAccess().getIyyKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__9__Impl
	rule__Inertia__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyyAssignment_9()); }
	(rule__Inertia__IyyAssignment_9)
	{ after(grammarAccess.getInertiaAccess().getIyyAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__10__Impl
	rule__Inertia__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzKeyword_10()); }
	'iyz'
	{ after(grammarAccess.getInertiaAccess().getIyzKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__11__Impl
	rule__Inertia__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIyzAssignment_11()); }
	(rule__Inertia__IyzAssignment_11)
	{ after(grammarAccess.getInertiaAccess().getIyzAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__12__Impl
	rule__Inertia__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzKeyword_12()); }
	'izz'
	{ after(grammarAccess.getInertiaAccess().getIzzKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getIzzAssignment_13()); }
	(rule__Inertia__IzzAssignment_13)
	{ after(grammarAccess.getInertiaAccess().getIzzAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getColorKeyword_0()); }
	'Color'
	{ after(grammarAccess.getColorAccess().getColorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__1__Impl
	rule__Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getNameAssignment_1()); }
	(rule__Color__NameAssignment_1)?
	{ after(grammarAccess.getColorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__2__Impl
	rule__Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRed_green_blue_alphaKeyword_2()); }
	'red_green_blue_alpha'
	{ after(grammarAccess.getColorAccess().getRed_green_blue_alphaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__3__Impl
	rule__Color__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRedAssignment_3()); }
	(rule__Color__RedAssignment_3)
	{ after(grammarAccess.getColorAccess().getRedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__4__Impl
	rule__Color__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getGreenAssignment_4()); }
	(rule__Color__GreenAssignment_4)
	{ after(grammarAccess.getColorAccess().getGreenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__5__Impl
	rule__Color__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getBlueAssignment_5()); }
	(rule__Color__BlueAssignment_5)
	{ after(grammarAccess.getColorAccess().getBlueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getAlphaAssignment_6()); }
	(rule__Color__AlphaAssignment_6)
	{ after(grammarAccess.getColorAccess().getAlphaAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Texture__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__0__Impl
	rule__Texture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getTextureKeyword_0()); }
	'Texture'
	{ after(grammarAccess.getTextureAccess().getTextureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__1__Impl
	rule__Texture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getNameAssignment_1()); }
	(rule__Texture__NameAssignment_1)?
	{ after(grammarAccess.getTextureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__2__Impl
	rule__Texture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getPathToFileKeyword_2()); }
	'pathToFile'
	{ after(grammarAccess.getTextureAccess().getPathToFileKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getPathToFileAssignment_3()); }
	(rule__Texture__PathToFileAssignment_3)
	{ after(grammarAccess.getTextureAccess().getPathToFileAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxKeyword_0()); }
	'Box'
	{ after(grammarAccess.getBoxAccess().getBoxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getNameAssignment_1()); }
	(rule__Box__NameAssignment_1)?
	{ after(grammarAccess.getBoxAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getHeight_length_widthKeyword_2()); }
	'height_length_width'
	{ after(grammarAccess.getBoxAccess().getHeight_length_widthKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getHeightAssignment_3()); }
	(rule__Box__HeightAssignment_3)
	{ after(grammarAccess.getBoxAccess().getHeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__4__Impl
	rule__Box__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getLengthAssignment_4()); }
	(rule__Box__LengthAssignment_4)
	{ after(grammarAccess.getBoxAccess().getLengthAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getWidthAssignment_5()); }
	(rule__Box__WidthAssignment_5)
	{ after(grammarAccess.getBoxAccess().getWidthAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cylinder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__0__Impl
	rule__Cylinder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
	'Cylinder'
	{ after(grammarAccess.getCylinderAccess().getCylinderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__1__Impl
	rule__Cylinder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getNameAssignment_1()); }
	(rule__Cylinder__NameAssignment_1)?
	{ after(grammarAccess.getCylinderAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__2__Impl
	rule__Cylinder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusKeyword_2()); }
	'radius'
	{ after(grammarAccess.getCylinderAccess().getRadiusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__3__Impl
	rule__Cylinder__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getRadiusAssignment_3()); }
	(rule__Cylinder__RadiusAssignment_3)
	{ after(grammarAccess.getCylinderAccess().getRadiusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__4__Impl
	rule__Cylinder__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthKeyword_4()); }
	'length'
	{ after(grammarAccess.getCylinderAccess().getLengthKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getLengthAssignment_5()); }
	(rule__Cylinder__LengthAssignment_5)
	{ after(grammarAccess.getCylinderAccess().getLengthAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__0__Impl
	rule__Mesh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
	'Mesh'
	{ after(grammarAccess.getMeshAccess().getMeshKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__1__Impl
	rule__Mesh__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getNameAssignment_1()); }
	(rule__Mesh__NameAssignment_1)?
	{ after(grammarAccess.getMeshAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__2__Impl
	rule__Mesh__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getPathToFileKeyword_2()); }
	'pathToFile'
	{ after(grammarAccess.getMeshAccess().getPathToFileKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__3__Impl
	rule__Mesh__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getPathToFileAssignment_3()); }
	(rule__Mesh__PathToFileAssignment_3)
	{ after(grammarAccess.getMeshAccess().getPathToFileAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getGroup_4()); }
	(rule__Mesh__Group_4__0)?
	{ after(grammarAccess.getMeshAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__0__Impl
	rule__Mesh__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
	'scale'
	{ after(grammarAccess.getMeshAccess().getScaleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getBoxAssignment_4_1()); }
	(rule__Mesh__BoxAssignment_4_1)
	{ after(grammarAccess.getMeshAccess().getBoxAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sphere__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__0__Impl
	rule__Sphere__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
	'Sphere'
	{ after(grammarAccess.getSphereAccess().getSphereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__1__Impl
	rule__Sphere__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getNameAssignment_1()); }
	(rule__Sphere__NameAssignment_1)?
	{ after(grammarAccess.getSphereAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__2__Impl
	rule__Sphere__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
	'radius'
	{ after(grammarAccess.getSphereAccess().getRadiusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
	(rule__Sphere__RadiusAssignment_3)
	{ after(grammarAccess.getSphereAccess().getRadiusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__0__Impl
	rule__Limit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getNameAssignment_0()); }
	(rule__Limit__NameAssignment_0)?
	{ after(grammarAccess.getLimitAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__1__Impl
	rule__Limit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortKeyword_1()); }
	'effort'
	{ after(grammarAccess.getLimitAccess().getEffortKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__2__Impl
	rule__Limit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortAssignment_2()); }
	(rule__Limit__EffortAssignment_2)
	{ after(grammarAccess.getLimitAccess().getEffortAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__3__Impl
	rule__Limit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityKeyword_3()); }
	'velocity'
	{ after(grammarAccess.getLimitAccess().getVelocityKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__4__Impl
	rule__Limit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityAssignment_4()); }
	(rule__Limit__VelocityAssignment_4)
	{ after(grammarAccess.getLimitAccess().getVelocityAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__5__Impl
	rule__Limit__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerKeyword_5()); }
	'lower'
	{ after(grammarAccess.getLimitAccess().getLowerKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__6__Impl
	rule__Limit__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerAssignment_6()); }
	(rule__Limit__LowerAssignment_6)?
	{ after(grammarAccess.getLimitAccess().getLowerAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__7__Impl
	rule__Limit__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperKeyword_7()); }
	'upper'
	{ after(grammarAccess.getLimitAccess().getUpperKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperAssignment_8()); }
	(rule__Limit__UpperAssignment_8)?
	{ after(grammarAccess.getLimitAccess().getUpperAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__0__Impl
	rule__Axis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getNameAssignment_0()); }
	(rule__Axis__NameAssignment_0)?
	{ after(grammarAccess.getAxisAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__1__Impl
	rule__Axis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXyzKeyword_1()); }
	'xyz'
	{ after(grammarAccess.getAxisAccess().getXyzKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__2__Impl
	rule__Axis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXAssignment_2()); }
	(rule__Axis__XAssignment_2)
	{ after(grammarAccess.getAxisAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__3__Impl
	rule__Axis__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getYAssignment_3()); }
	(rule__Axis__YAssignment_3)
	{ after(grammarAccess.getAxisAccess().getYAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getZAssignment_4()); }
	(rule__Axis__ZAssignment_4)
	{ after(grammarAccess.getAxisAccess().getZAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calibration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__0__Impl
	rule__Calibration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getCalibrationAction_0()); }
	()
	{ after(grammarAccess.getCalibrationAccess().getCalibrationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__1__Impl
	rule__Calibration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getNameAssignment_1()); }
	(rule__Calibration__NameAssignment_1)?
	{ after(grammarAccess.getCalibrationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__2__Impl
	rule__Calibration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getGroup_2()); }
	(rule__Calibration__Group_2__0)?
	{ after(grammarAccess.getCalibrationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getGroup_3()); }
	(rule__Calibration__Group_3__0)?
	{ after(grammarAccess.getCalibrationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calibration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_2__0__Impl
	rule__Calibration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getRisingKeyword_2_0()); }
	'rising'
	{ after(grammarAccess.getCalibrationAccess().getRisingKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getRisingAssignment_2_1()); }
	(rule__Calibration__RisingAssignment_2_1)
	{ after(grammarAccess.getCalibrationAccess().getRisingAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calibration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_3__0__Impl
	rule__Calibration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getFallingKeyword_3_0()); }
	'falling'
	{ after(grammarAccess.getCalibrationAccess().getFallingKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calibration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalibrationAccess().getFallingAssignment_3_1()); }
	(rule__Calibration__FallingAssignment_3_1)
	{ after(grammarAccess.getCalibrationAccess().getFallingAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__0__Impl
	rule__Dynamics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDynamicsAction_0()); }
	()
	{ after(grammarAccess.getDynamicsAccess().getDynamicsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__1__Impl
	rule__Dynamics__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getNameAssignment_1()); }
	(rule__Dynamics__NameAssignment_1)?
	{ after(grammarAccess.getDynamicsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__2__Impl
	rule__Dynamics__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getGroup_2()); }
	(rule__Dynamics__Group_2__0)?
	{ after(grammarAccess.getDynamicsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getGroup_3()); }
	(rule__Dynamics__Group_3__0)?
	{ after(grammarAccess.getDynamicsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_2__0__Impl
	rule__Dynamics__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getFrictionKeyword_2_0()); }
	'friction'
	{ after(grammarAccess.getDynamicsAccess().getFrictionKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getFrictionAssignment_2_1()); }
	(rule__Dynamics__FrictionAssignment_2_1)
	{ after(grammarAccess.getDynamicsAccess().getFrictionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_3__0__Impl
	rule__Dynamics__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDampingKeyword_3_0()); }
	'damping'
	{ after(grammarAccess.getDynamicsAccess().getDampingKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDampingAssignment_3_1()); }
	(rule__Dynamics__DampingAssignment_3_1)
	{ after(grammarAccess.getDynamicsAccess().getDampingAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mimic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__0__Impl
	rule__Mimic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getNameAssignment_0()); }
	(rule__Mimic__NameAssignment_0)?
	{ after(grammarAccess.getMimicAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__1__Impl
	rule__Mimic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getMimicsKeyword_1()); }
	'mimics'
	{ after(grammarAccess.getMimicAccess().getMimicsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__2__Impl
	rule__Mimic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getMimicsAssignment_2()); }
	(rule__Mimic__MimicsAssignment_2)
	{ after(grammarAccess.getMimicAccess().getMimicsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__3__Impl
	rule__Mimic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getGroup_3()); }
	(rule__Mimic__Group_3__0)?
	{ after(grammarAccess.getMimicAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getGroup_4()); }
	(rule__Mimic__Group_4__0)?
	{ after(grammarAccess.getMimicAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mimic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_3__0__Impl
	rule__Mimic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getMultiplierKeyword_3_0()); }
	'multiplier'
	{ after(grammarAccess.getMimicAccess().getMultiplierKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getMultiplierAssignment_3_1()); }
	(rule__Mimic__MultiplierAssignment_3_1)
	{ after(grammarAccess.getMimicAccess().getMultiplierAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mimic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_4__0__Impl
	rule__Mimic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getOffSetKeyword_4_0()); }
	'offSet'
	{ after(grammarAccess.getMimicAccess().getOffSetKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getOffSetAssignment_4_1()); }
	(rule__Mimic__OffSetAssignment_4_1)
	{ after(grammarAccess.getMimicAccess().getOffSetAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__0__Impl
	rule__SafetyController__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getNameAssignment_0()); }
	(rule__SafetyController__NameAssignment_0)?
	{ after(grammarAccess.getSafetyControllerAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__1__Impl
	rule__SafetyController__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_1()); }
	(rule__SafetyController__Group_1__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__2__Impl
	rule__SafetyController__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_2()); }
	(rule__SafetyController__Group_2__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__3__Impl
	rule__SafetyController__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_3()); }
	(rule__SafetyController__Group_3__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__4__Impl
	rule__SafetyController__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_4()); }
	'k_velocity'
	{ after(grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_5()); }
	(rule__SafetyController__K_velocityAssignment_5)
	{ after(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_1__0__Impl
	rule__SafetyController__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_1_0()); }
	'softLowerLimit'
	{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_1_1()); }
	(rule__SafetyController__SoftLowerLimitAssignment_1_1)
	{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_2__0__Impl
	rule__SafetyController__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_2_0()); }
	'softUpperLimit'
	{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_2_1()); }
	(rule__SafetyController__SoftUpperLimitAssignment_2_1)
	{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_3__0__Impl
	rule__SafetyController__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_positionKeyword_3_0()); }
	'k_position'
	{ after(grammarAccess.getSafetyControllerAccess().getK_positionKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_3_1()); }
	(rule__SafetyController__K_positionAssignment_3_1)
	{ after(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__0__Impl
	rule__FLOAT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__1__Impl
	rule__FLOAT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SCIENTIFIC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__0__Impl
	rule__SCIENTIFIC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getFLOATParserRuleCall_0()); }
	ruleFLOAT
	{ after(grammarAccess.getSCIENTIFICAccess().getFLOATParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__1__Impl
	rule__SCIENTIFIC__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getEKeyword_1()); }
	'e'
	{ after(grammarAccess.getSCIENTIFICAccess().getEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__2__Impl
	rule__SCIENTIFIC__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getAlternatives_2()); }
	(rule__SCIENTIFIC__Alternatives_2)?
	{ after(grammarAccess.getSCIENTIFICAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCIENTIFIC__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCIENTIFIC__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCIENTIFICAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getSCIENTIFICAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIGNED_NUMERIC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIGNED_NUMERIC__Group__0__Impl
	rule__SIGNED_NUMERIC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIGNED_NUMERICAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getSIGNED_NUMERICAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIGNED_NUMERIC__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_NUMERIC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIGNED_NUMERICAccess().getAlternatives_1()); }
	(rule__SIGNED_NUMERIC__Alternatives_1)
	{ after(grammarAccess.getSIGNED_NUMERICAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__LinkAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_2_0_0()); }
		ruleLink
		{ after(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__JointAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getJointJointParserRuleCall_2_1_0()); }
		ruleJoint
		{ after(grammarAccess.getRobotAccess().getJointJointParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__VisualsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_2_0()); }
		ruleVisual
		{ after(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__InertialAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_0()); }
		ruleInertial
		{ after(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__CollisionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_4_0()); }
		ruleCollision
		{ after(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_3_0()); }
		ruleJointType
		{ after(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ChildOfAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getChildOfLinkCrossReference_5_0()); }
		(
			{ before(grammarAccess.getJointAccess().getChildOfLinkIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJointAccess().getChildOfLinkIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getChildOfLinkCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ParentOfAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getParentOfLinkCrossReference_7_0()); }
		(
			{ before(grammarAccess.getJointAccess().getParentOfLinkIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getJointAccess().getParentOfLinkIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getParentOfLinkCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__LimitAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_8_1_0()); }
		ruleLimit
		{ after(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__AxisAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_9_1_0()); }
		ruleAxis
		{ after(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__OriginAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getOriginOriginParserRuleCall_10_0()); }
		ruleOrigin
		{ after(grammarAccess.getJointAccess().getOriginOriginParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__CalibrationAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getCalibrationCalibrationParserRuleCall_11_1_0()); }
		ruleCalibration
		{ after(grammarAccess.getJointAccess().getCalibrationCalibrationParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__DynamicsAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getDynamicsDynamicsParserRuleCall_12_1_0()); }
		ruleDynamics
		{ after(grammarAccess.getJointAccess().getDynamicsDynamicsParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__MimicAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getMimicMimicParserRuleCall_13_1_0()); }
		ruleMimic
		{ after(grammarAccess.getJointAccess().getMimicMimicParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__SafetycontrollerAssignment_14_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getSafetycontrollerSafetyControllerParserRuleCall_14_1_0()); }
		ruleSafetyController
		{ after(grammarAccess.getJointAccess().getSafetycontrollerSafetyControllerParserRuleCall_14_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInertialAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__InertiaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_2_0()); }
		ruleInertia
		{ after(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__MassAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_0()); }
		ruleMass
		{ after(grammarAccess.getInertialAccess().getMassMassParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__OriginAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_4_0()); }
		ruleOrigin
		{ after(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVisualAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__OriginAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_4_0()); }
		ruleOrigin
		{ after(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__MaterialAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getMaterialMaterialParserRuleCall_5_1_0()); }
		ruleMaterial
		{ after(grammarAccess.getVisualAccess().getMaterialMaterialParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCollisionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__GeometryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
		ruleGeometry
		{ after(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__OriginAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_4_0()); }
		ruleOrigin
		{ after(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOriginAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__XAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getXSIGNED_NUMERICParserRuleCall_3_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getOriginAccess().getXSIGNED_NUMERICParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__YAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getYSIGNED_NUMERICParserRuleCall_4_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getOriginAccess().getYSIGNED_NUMERICParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__ZAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getZSIGNED_NUMERICParserRuleCall_5_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getOriginAccess().getZSIGNED_NUMERICParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__RollAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getRollSIGNED_NUMERICParserRuleCall_6_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getOriginAccess().getRollSIGNED_NUMERICParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__PitchAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getPitchSIGNED_NUMERICParserRuleCall_6_2_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getOriginAccess().getPitchSIGNED_NUMERICParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__YawAssignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getYawSIGNED_NUMERICParserRuleCall_6_3_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getOriginAccess().getYawSIGNED_NUMERICParserRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMassAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMassAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__MassValueInKilogramsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMassAccess().getMassValueInKilogramsFLOATParserRuleCall_3_0()); }
		ruleFLOAT
		{ after(grammarAccess.getMassAccess().getMassValueInKilogramsFLOATParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInertiaAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxxAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxxSIGNED_NUMERICParserRuleCall_3_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getInertiaAccess().getIxxSIGNED_NUMERICParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxySIGNED_NUMERICParserRuleCall_5_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getInertiaAccess().getIxySIGNED_NUMERICParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IxzAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIxzSIGNED_NUMERICParserRuleCall_7_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getInertiaAccess().getIxzSIGNED_NUMERICParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyyAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyySIGNED_NUMERICParserRuleCall_9_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getInertiaAccess().getIyySIGNED_NUMERICParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IyzAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIyzSIGNED_NUMERICParserRuleCall_11_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getInertiaAccess().getIyzSIGNED_NUMERICParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__IzzAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertiaAccess().getIzzSIGNED_NUMERICParserRuleCall_13_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getInertiaAccess().getIzzSIGNED_NUMERICParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getColorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRedFLOATParserRuleCall_3_0()); }
		ruleFLOAT
		{ after(grammarAccess.getColorAccess().getRedFLOATParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GreenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getGreenFLOATParserRuleCall_4_0()); }
		ruleFLOAT
		{ after(grammarAccess.getColorAccess().getGreenFLOATParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BlueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBlueFLOATParserRuleCall_5_0()); }
		ruleFLOAT
		{ after(grammarAccess.getColorAccess().getBlueFLOATParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__AlphaAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getAlphaFLOATParserRuleCall_6_0()); }
		ruleFLOAT
		{ after(grammarAccess.getColorAccess().getAlphaFLOATParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextureAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTextureAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__PathToFileAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextureAccess().getPathToFileSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextureAccess().getPathToFileSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBoxAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__HeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getHeightMEASUREParserRuleCall_3_0()); }
		ruleMEASURE
		{ after(grammarAccess.getBoxAccess().getHeightMEASUREParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__LengthAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getLengthMEASUREParserRuleCall_4_0()); }
		ruleMEASURE
		{ after(grammarAccess.getBoxAccess().getLengthMEASUREParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__WidthAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoxAccess().getWidthMEASUREParserRuleCall_5_0()); }
		ruleMEASURE
		{ after(grammarAccess.getBoxAccess().getWidthMEASUREParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCylinderAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__RadiusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getRadiusMEASUREParserRuleCall_3_0()); }
		ruleMEASURE
		{ after(grammarAccess.getCylinderAccess().getRadiusMEASUREParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__LengthAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCylinderAccess().getLengthMEASUREParserRuleCall_5_0()); }
		ruleMEASURE
		{ after(grammarAccess.getCylinderAccess().getLengthMEASUREParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMeshAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__PathToFileAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getPathToFileSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getMeshAccess().getPathToFileSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__BoxAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeshAccess().getBoxBoxCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getMeshAccess().getBoxBoxSTRINGTerminalRuleCall_4_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getMeshAccess().getBoxBoxSTRINGTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getMeshAccess().getBoxBoxCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSphereAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__RadiusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSphereAccess().getRadiusMEASUREParserRuleCall_3_0()); }
		ruleMEASURE
		{ after(grammarAccess.getSphereAccess().getRadiusMEASUREParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLimitAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__EffortAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getEffortSIGNED_NUMERICParserRuleCall_2_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getLimitAccess().getEffortSIGNED_NUMERICParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__VelocityAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getVelocitySIGNED_NUMERICParserRuleCall_4_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getLimitAccess().getVelocitySIGNED_NUMERICParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__LowerAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getLowerSIGNED_NUMERICParserRuleCall_6_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getLimitAccess().getLowerSIGNED_NUMERICParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__UpperAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getUpperSIGNED_NUMERICParserRuleCall_8_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getLimitAccess().getUpperSIGNED_NUMERICParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAxisAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getXAXIS_VALUETerminalRuleCall_2_0()); }
		RULE_AXIS_VALUE
		{ after(grammarAccess.getAxisAccess().getXAXIS_VALUETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__YAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getYAXIS_VALUETerminalRuleCall_3_0()); }
		RULE_AXIS_VALUE
		{ after(grammarAccess.getAxisAccess().getYAXIS_VALUETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__ZAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getZAXIS_VALUETerminalRuleCall_4_0()); }
		RULE_AXIS_VALUE
		{ after(grammarAccess.getAxisAccess().getZAXIS_VALUETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCalibrationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__RisingAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getRisingSIGNED_NUMERICParserRuleCall_2_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getCalibrationAccess().getRisingSIGNED_NUMERICParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calibration__FallingAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalibrationAccess().getFallingSIGNED_NUMERICParserRuleCall_3_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getCalibrationAccess().getFallingSIGNED_NUMERICParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDynamicsAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__FrictionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getFrictionSIGNED_NUMERICParserRuleCall_2_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getDynamicsAccess().getFrictionSIGNED_NUMERICParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__DampingAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getDampingSIGNED_NUMERICParserRuleCall_3_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getDynamicsAccess().getDampingSIGNED_NUMERICParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMimicAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMimicAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__MimicsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMimicAccess().getMimicsJointCrossReference_2_0()); }
		(
			{ before(grammarAccess.getMimicAccess().getMimicsJointIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMimicAccess().getMimicsJointIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getMimicAccess().getMimicsJointCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__MultiplierAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMimicAccess().getMultiplierSIGNED_NUMERICParserRuleCall_3_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getMimicAccess().getMultiplierSIGNED_NUMERICParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__OffSetAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMimicAccess().getOffSetSIGNED_NUMERICParserRuleCall_4_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getMimicAccess().getOffSetSIGNED_NUMERICParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSafetyControllerAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__SoftLowerLimitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitSIGNED_NUMERICParserRuleCall_1_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitSIGNED_NUMERICParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__SoftUpperLimitAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitSIGNED_NUMERICParserRuleCall_2_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitSIGNED_NUMERICParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__K_positionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getK_positionSIGNED_NUMERICParserRuleCall_3_1_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getSafetyControllerAccess().getK_positionSIGNED_NUMERICParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__K_velocityAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getK_velocitySIGNED_NUMERICParserRuleCall_5_0()); }
		ruleSIGNED_NUMERIC
		{ after(grammarAccess.getSafetyControllerAccess().getK_velocitySIGNED_NUMERICParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_AXIS_VALUE : '0'..'1';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
