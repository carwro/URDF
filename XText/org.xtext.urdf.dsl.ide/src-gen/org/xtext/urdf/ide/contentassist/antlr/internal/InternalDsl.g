/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.urdf.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.urdf.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.urdf.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaterial
entryRuleMaterial
:
{ before(grammarAccess.getMaterialRule()); }
	 ruleMaterial
{ after(grammarAccess.getMaterialRule()); } 
	 EOF 
;

// Rule Material
ruleMaterial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaterialAccess().getAlternatives()); }
		(rule__Material__Alternatives)
		{ after(grammarAccess.getMaterialAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry
entryRuleGeometry
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometryAccess().getAlternatives()); }
		(rule__Geometry__Alternatives)
		{ after(grammarAccess.getGeometryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoint
entryRuleJoint
:
{ before(grammarAccess.getJointRule()); }
	 ruleJoint
{ after(grammarAccess.getJointRule()); } 
	 EOF 
;

// Rule Joint
ruleJoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJointAccess().getGroup()); }
		(rule__Joint__Group__0)
		{ after(grammarAccess.getJointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertial
entryRuleInertial
:
{ before(grammarAccess.getInertialRule()); }
	 ruleInertial
{ after(grammarAccess.getInertialRule()); } 
	 EOF 
;

// Rule Inertial
ruleInertial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertialAccess().getGroup()); }
		(rule__Inertial__Group__0)
		{ after(grammarAccess.getInertialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisual
entryRuleVisual
:
{ before(grammarAccess.getVisualRule()); }
	 ruleVisual
{ after(grammarAccess.getVisualRule()); } 
	 EOF 
;

// Rule Visual
ruleVisual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualAccess().getGroup()); }
		(rule__Visual__Group__0)
		{ after(grammarAccess.getVisualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollision
entryRuleCollision
:
{ before(grammarAccess.getCollisionRule()); }
	 ruleCollision
{ after(grammarAccess.getCollisionRule()); } 
	 EOF 
;

// Rule Collision
ruleCollision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollisionAccess().getGroup()); }
		(rule__Collision__Group__0)
		{ after(grammarAccess.getCollisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrigin
entryRuleOrigin
:
{ before(grammarAccess.getOriginRule()); }
	 ruleOrigin
{ after(grammarAccess.getOriginRule()); } 
	 EOF 
;

// Rule Origin
ruleOrigin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOriginAccess().getGroup()); }
		(rule__Origin__Group__0)
		{ after(grammarAccess.getOriginAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMass
entryRuleMass
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMassAccess().getGroup()); }
		(rule__Mass__Group__0)
		{ after(grammarAccess.getMassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInertia
entryRuleInertia
:
{ before(grammarAccess.getInertiaRule()); }
	 ruleInertia
{ after(grammarAccess.getInertiaRule()); } 
	 EOF 
;

// Rule Inertia
ruleInertia 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInertiaAccess().getGroup()); }
		(rule__Inertia__Group__0)
		{ after(grammarAccess.getInertiaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaterial_Impl
entryRuleMaterial_Impl
:
{ before(grammarAccess.getMaterial_ImplRule()); }
	 ruleMaterial_Impl
{ after(grammarAccess.getMaterial_ImplRule()); } 
	 EOF 
;

// Rule Material_Impl
ruleMaterial_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaterial_ImplAccess().getGroup()); }
		(rule__Material_Impl__Group__0)
		{ after(grammarAccess.getMaterial_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeometry_Impl
entryRuleGeometry_Impl
:
{ before(grammarAccess.getGeometry_ImplRule()); }
	 ruleGeometry_Impl
{ after(grammarAccess.getGeometry_ImplRule()); } 
	 EOF 
;

// Rule Geometry_Impl
ruleGeometry_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeometry_ImplAccess().getGroup()); }
		(rule__Geometry_Impl__Group__0)
		{ after(grammarAccess.getGeometry_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getGroup()); }
		(rule__Color__Group__0)
		{ after(grammarAccess.getColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTexture
entryRuleTexture
:
{ before(grammarAccess.getTextureRule()); }
	 ruleTexture
{ after(grammarAccess.getTextureRule()); } 
	 EOF 
;

// Rule Texture
ruleTexture 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextureAccess().getGroup()); }
		(rule__Texture__Group__0)
		{ after(grammarAccess.getTextureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBox
entryRuleBox
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoxAccess().getGroup()); }
		(rule__Box__Group__0)
		{ after(grammarAccess.getBoxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCylinder
entryRuleCylinder
:
{ before(grammarAccess.getCylinderRule()); }
	 ruleCylinder
{ after(grammarAccess.getCylinderRule()); } 
	 EOF 
;

// Rule Cylinder
ruleCylinder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCylinderAccess().getGroup()); }
		(rule__Cylinder__Group__0)
		{ after(grammarAccess.getCylinderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMesh
entryRuleMesh
:
{ before(grammarAccess.getMeshRule()); }
	 ruleMesh
{ after(grammarAccess.getMeshRule()); } 
	 EOF 
;

// Rule Mesh
ruleMesh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeshAccess().getGroup()); }
		(rule__Mesh__Group__0)
		{ after(grammarAccess.getMeshAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSphere
entryRuleSphere
:
{ before(grammarAccess.getSphereRule()); }
	 ruleSphere
{ after(grammarAccess.getSphereRule()); } 
	 EOF 
;

// Rule Sphere
ruleSphere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSphereAccess().getGroup()); }
		(rule__Sphere__Group__0)
		{ after(grammarAccess.getSphereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLimit
entryRuleLimit
:
{ before(grammarAccess.getLimitRule()); }
	 ruleLimit
{ after(grammarAccess.getLimitRule()); } 
	 EOF 
;

// Rule Limit
ruleLimit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLimitAccess().getGroup()); }
		(rule__Limit__Group__0)
		{ after(grammarAccess.getLimitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAxis
entryRuleAxis
:
{ before(grammarAccess.getAxisRule()); }
	 ruleAxis
{ after(grammarAccess.getAxisRule()); } 
	 EOF 
;

// Rule Axis
ruleAxis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAxisAccess().getGroup()); }
		(rule__Axis__Group__0)
		{ after(grammarAccess.getAxisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallibration
entryRuleCallibration
:
{ before(grammarAccess.getCallibrationRule()); }
	 ruleCallibration
{ after(grammarAccess.getCallibrationRule()); } 
	 EOF 
;

// Rule Callibration
ruleCallibration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallibrationAccess().getGroup()); }
		(rule__Callibration__Group__0)
		{ after(grammarAccess.getCallibrationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDynamics
entryRuleDynamics
:
{ before(grammarAccess.getDynamicsRule()); }
	 ruleDynamics
{ after(grammarAccess.getDynamicsRule()); } 
	 EOF 
;

// Rule Dynamics
ruleDynamics 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDynamicsAccess().getGroup()); }
		(rule__Dynamics__Group__0)
		{ after(grammarAccess.getDynamicsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMimic
entryRuleMimic
:
{ before(grammarAccess.getMimicRule()); }
	 ruleMimic
{ after(grammarAccess.getMimicRule()); } 
	 EOF 
;

// Rule Mimic
ruleMimic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMimicAccess().getGroup()); }
		(rule__Mimic__Group__0)
		{ after(grammarAccess.getMimicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSafetyController
entryRuleSafetyController
:
{ before(grammarAccess.getSafetyControllerRule()); }
	 ruleSafetyController
{ after(grammarAccess.getSafetyControllerRule()); } 
	 EOF 
;

// Rule SafetyController
ruleSafetyController 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getGroup()); }
		(rule__SafetyController__Group__0)
		{ after(grammarAccess.getSafetyControllerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule JointType
ruleJointType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointTypeAccess().getAlternatives()); }
		(rule__JointType__Alternatives)
		{ after(grammarAccess.getJointTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Material__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaterialAccess().getMaterial_ImplParserRuleCall_0()); }
		ruleMaterial_Impl
		{ after(grammarAccess.getMaterialAccess().getMaterial_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMaterialAccess().getColorParserRuleCall_1()); }
		ruleColor
		{ after(grammarAccess.getMaterialAccess().getColorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMaterialAccess().getTextureParserRuleCall_2()); }
		ruleTexture
		{ after(grammarAccess.getMaterialAccess().getTextureParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeometryAccess().getGeometry_ImplParserRuleCall_0()); }
		ruleGeometry_Impl
		{ after(grammarAccess.getGeometryAccess().getGeometry_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getBoxParserRuleCall_1()); }
		ruleBox
		{ after(grammarAccess.getGeometryAccess().getBoxParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_2()); }
		ruleCylinder
		{ after(grammarAccess.getGeometryAccess().getCylinderParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getMeshParserRuleCall_3()); }
		ruleMesh
		{ after(grammarAccess.getGeometryAccess().getMeshParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGeometryAccess().getSphereParserRuleCall_4()); }
		ruleSphere
		{ after(grammarAccess.getGeometryAccess().getSphereParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_0()); }
		('Revolute')
		{ after(grammarAccess.getJointTypeAccess().getRevoluteEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getContinousEnumLiteralDeclaration_1()); }
		('Continous')
		{ after(grammarAccess.getJointTypeAccess().getContinousEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_2()); }
		('Fixed')
		{ after(grammarAccess.getJointTypeAccess().getFixedEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_3()); }
		('Prismatic')
		{ after(grammarAccess.getJointTypeAccess().getPrismaticEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotNameKeyword_0()); }
	'RobotName'
	{ after(grammarAccess.getRobotAccess().getRobotNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_1()); }
	(rule__Robot__NameAssignment_1)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLinkAssignment_2()); }
	(rule__Robot__LinkAssignment_2)
	{ after(grammarAccess.getRobotAccess().getLinkAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_3()); }
	(rule__Robot__Group_3__0)*
	{ after(grammarAccess.getRobotAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_4()); }
	(rule__Robot__Group_4__0)?
	{ after(grammarAccess.getRobotAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__0__Impl
	rule__Robot__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getRobotAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLinkAssignment_3_1()); }
	(rule__Robot__LinkAssignment_3_1)
	{ after(grammarAccess.getRobotAccess().getLinkAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4__0__Impl
	rule__Robot__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getJointAssignment_4_0()); }
	(rule__Robot__JointAssignment_4_0)
	{ after(grammarAccess.getRobotAccess().getJointAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getJointAssignment_4_1()); }
	(rule__Robot__JointAssignment_4_1)*
	{ after(grammarAccess.getRobotAccess().getJointAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkAction_0()); }
	()
	{ after(grammarAccess.getLinkAccess().getLinkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkKeyword_1()); }
	'Link'
	{ after(grammarAccess.getLinkAccess().getLinkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameAssignment_2()); }
	(rule__Link__NameAssignment_2)
	{ after(grammarAccess.getLinkAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
	rule__Link__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_3()); }
	(rule__Link__Group_3__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__4__Impl
	rule__Link__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_4()); }
	(rule__Link__Group_4__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_5()); }
	(rule__Link__Group_5__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__0__Impl
	rule__Link__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialKeyword_3_0()); }
	'inertial'
	{ after(grammarAccess.getLinkAccess().getInertialKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__1__Impl
	rule__Link__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialAssignment_3_1()); }
	(rule__Link__InertialAssignment_3_1)
	{ after(grammarAccess.getLinkAccess().getInertialAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getInertialAssignment_3_2()); }
	(rule__Link__InertialAssignment_3_2)*
	{ after(grammarAccess.getLinkAccess().getInertialAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_4__0__Impl
	rule__Link__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualsKeyword_4_0()); }
	'visuals'
	{ after(grammarAccess.getLinkAccess().getVisualsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_4__1__Impl
	rule__Link__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualsAssignment_4_1()); }
	(rule__Link__VisualsAssignment_4_1)
	{ after(grammarAccess.getLinkAccess().getVisualsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getVisualsAssignment_4_2()); }
	(rule__Link__VisualsAssignment_4_2)*
	{ after(grammarAccess.getLinkAccess().getVisualsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_5__0__Impl
	rule__Link__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionKeyword_5_0()); }
	'collision'
	{ after(grammarAccess.getLinkAccess().getCollisionKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_5__1__Impl
	rule__Link__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionAssignment_5_1()); }
	(rule__Link__CollisionAssignment_5_1)
	{ after(grammarAccess.getLinkAccess().getCollisionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCollisionAssignment_5_2()); }
	(rule__Link__CollisionAssignment_5_2)*
	{ after(grammarAccess.getLinkAccess().getCollisionAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__0__Impl
	rule__Joint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getJointKeyword_0()); }
	'Joint'
	{ after(grammarAccess.getJointAccess().getJointKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__1__Impl
	rule__Joint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getNameAssignment_1()); }
	(rule__Joint__NameAssignment_1)
	{ after(grammarAccess.getJointAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__2__Impl
	rule__Joint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_2()); }
	(rule__Joint__Group_2__0)?
	{ after(grammarAccess.getJointAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__3__Impl
	rule__Joint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildOfKeyword_3()); }
	'ChildOf'
	{ after(grammarAccess.getJointAccess().getChildOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__4__Impl
	rule__Joint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getChildOfAssignment_4()); }
	(rule__Joint__ChildOfAssignment_4)
	{ after(grammarAccess.getJointAccess().getChildOfAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__5__Impl
	rule__Joint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentOfKeyword_5()); }
	'ParentOf'
	{ after(grammarAccess.getJointAccess().getParentOfKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__6__Impl
	rule__Joint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getParentOfAssignment_6()); }
	(rule__Joint__ParentOfAssignment_6)
	{ after(grammarAccess.getJointAccess().getParentOfAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__7__Impl
	rule__Joint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_7()); }
	(rule__Joint__Group_7__0)?
	{ after(grammarAccess.getJointAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__8__Impl
	rule__Joint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_8()); }
	(rule__Joint__Group_8__0)?
	{ after(grammarAccess.getJointAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__9__Impl
	rule__Joint__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getOriginKeyword_9()); }
	'origin'
	{ after(grammarAccess.getJointAccess().getOriginKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__10__Impl
	rule__Joint__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getOriginAssignment_10()); }
	(rule__Joint__OriginAssignment_10)
	{ after(grammarAccess.getJointAccess().getOriginAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__11__Impl
	rule__Joint__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_11()); }
	(rule__Joint__Group_11__0)?
	{ after(grammarAccess.getJointAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__12__Impl
	rule__Joint__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_12()); }
	(rule__Joint__Group_12__0)?
	{ after(grammarAccess.getJointAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__13__Impl
	rule__Joint__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_13()); }
	(rule__Joint__Group_13__0)?
	{ after(grammarAccess.getJointAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getGroup_14()); }
	(rule__Joint__Group_14__0)?
	{ after(grammarAccess.getJointAccess().getGroup_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_2__0__Impl
	rule__Joint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeKeyword_2_0()); }
	'Type'
	{ after(grammarAccess.getJointAccess().getTypeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getTypeAssignment_2_1()); }
	(rule__Joint__TypeAssignment_2_1)
	{ after(grammarAccess.getJointAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_7__0__Impl
	rule__Joint__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitKeyword_7_0()); }
	'limit'
	{ after(grammarAccess.getJointAccess().getLimitKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getLimitAssignment_7_1()); }
	(rule__Joint__LimitAssignment_7_1)
	{ after(grammarAccess.getJointAccess().getLimitAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__0__Impl
	rule__Joint__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisKeyword_8_0()); }
	'axis'
	{ after(grammarAccess.getJointAccess().getAxisKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getAxisAssignment_8_1()); }
	(rule__Joint__AxisAssignment_8_1)
	{ after(grammarAccess.getJointAccess().getAxisAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_11__0__Impl
	rule__Joint__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getCallibrationKeyword_11_0()); }
	'callibration'
	{ after(grammarAccess.getJointAccess().getCallibrationKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getCallibrationAssignment_11_1()); }
	(rule__Joint__CallibrationAssignment_11_1)
	{ after(grammarAccess.getJointAccess().getCallibrationAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_12__0__Impl
	rule__Joint__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getDynamicsKeyword_12_0()); }
	'dynamics'
	{ after(grammarAccess.getJointAccess().getDynamicsKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getDynamicsAssignment_12_1()); }
	(rule__Joint__DynamicsAssignment_12_1)
	{ after(grammarAccess.getJointAccess().getDynamicsAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_13__0__Impl
	rule__Joint__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getMimicKeyword_13_0()); }
	'mimic'
	{ after(grammarAccess.getJointAccess().getMimicKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getMimicAssignment_13_1()); }
	(rule__Joint__MimicAssignment_13_1)
	{ after(grammarAccess.getJointAccess().getMimicAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_14__0__Impl
	rule__Joint__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getSafetycontrollerKeyword_14_0()); }
	'safetycontroller'
	{ after(grammarAccess.getJointAccess().getSafetycontrollerKeyword_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Joint__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJointAccess().getSafetycontrollerAssignment_14_1()); }
	(rule__Joint__SafetycontrollerAssignment_14_1)
	{ after(grammarAccess.getJointAccess().getSafetycontrollerAssignment_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__0__Impl
	rule__Inertial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginKeyword_0()); }
	'origin'
	{ after(grammarAccess.getInertialAccess().getOriginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__1__Impl
	rule__Inertial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getOriginAssignment_1()); }
	(rule__Inertial__OriginAssignment_1)
	{ after(grammarAccess.getInertialAccess().getOriginAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__2__Impl
	rule__Inertial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_2()); }
	(rule__Inertial__Group_2__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_3()); }
	(rule__Inertial__Group_3__0)?
	{ after(grammarAccess.getInertialAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2__0__Impl
	rule__Inertial__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassKeyword_2_0()); }
	'mass'
	{ after(grammarAccess.getInertialAccess().getMassKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2__1__Impl
	rule__Inertial__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassAssignment_2_1()); }
	(rule__Inertial__MassAssignment_2_1)
	{ after(grammarAccess.getInertialAccess().getMassAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getGroup_2_2()); }
	(rule__Inertial__Group_2_2__0)*
	{ after(grammarAccess.getInertialAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2_2__0__Impl
	rule__Inertial__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getInertialAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getMassAssignment_2_2_1()); }
	(rule__Inertial__MassAssignment_2_2_1)
	{ after(grammarAccess.getInertialAccess().getMassAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertial__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__0__Impl
	rule__Inertial__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaKeyword_3_0()); }
	'inertia'
	{ after(grammarAccess.getInertialAccess().getInertiaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__1__Impl
	rule__Inertial__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaAssignment_3_1()); }
	(rule__Inertial__InertiaAssignment_3_1)
	{ after(grammarAccess.getInertialAccess().getInertiaAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertial__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertialAccess().getInertiaAssignment_3_2()); }
	(rule__Inertial__InertiaAssignment_3_2)*
	{ after(grammarAccess.getInertialAccess().getInertiaAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__0__Impl
	rule__Visual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGroup_0()); }
	(rule__Visual__Group_0__0)?
	{ after(grammarAccess.getVisualAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__1__Impl
	rule__Visual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginKeyword_1()); }
	'origin'
	{ after(grammarAccess.getVisualAccess().getOriginKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__2__Impl
	rule__Visual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getOriginAssignment_2()); }
	(rule__Visual__OriginAssignment_2)
	{ after(grammarAccess.getVisualAccess().getOriginAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__3__Impl
	rule__Visual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryKeyword_3()); }
	'geometry'
	{ after(grammarAccess.getVisualAccess().getGeometryKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getGeometryAssignment_4()); }
	(rule__Visual__GeometryAssignment_4)
	{ after(grammarAccess.getVisualAccess().getGeometryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visual__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_0__0__Impl
	rule__Visual__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getMaterialKeyword_0_0()); }
	'material'
	{ after(grammarAccess.getVisualAccess().getMaterialKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visual__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualAccess().getMaterialAssignment_0_1()); }
	(rule__Visual__MaterialAssignment_0_1)
	{ after(grammarAccess.getVisualAccess().getMaterialAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collision__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__0__Impl
	rule__Collision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryKeyword_0()); }
	'geometry'
	{ after(grammarAccess.getCollisionAccess().getGeometryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__1__Impl
	rule__Collision__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getGeometryAssignment_1()); }
	(rule__Collision__GeometryAssignment_1)
	{ after(grammarAccess.getCollisionAccess().getGeometryAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__2__Impl
	rule__Collision__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginKeyword_2()); }
	'origin'
	{ after(grammarAccess.getCollisionAccess().getOriginKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collision__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollisionAccess().getOriginAssignment_3()); }
	(rule__Collision__OriginAssignment_3)
	{ after(grammarAccess.getCollisionAccess().getOriginAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__0__Impl
	rule__Origin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getOriginAction_0()); }
	()
	{ after(grammarAccess.getOriginAccess().getOriginAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__1__Impl
	rule__Origin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_1()); }
	(rule__Origin__Group_1__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__2__Impl
	rule__Origin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_2()); }
	(rule__Origin__Group_2__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__3__Impl
	rule__Origin__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_3()); }
	(rule__Origin__Group_3__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__4__Impl
	rule__Origin__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_4()); }
	(rule__Origin__Group_4__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__5__Impl
	rule__Origin__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_5()); }
	(rule__Origin__Group_5__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getGroup_6()); }
	(rule__Origin__Group_6__0)?
	{ after(grammarAccess.getOriginAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_1__0__Impl
	rule__Origin__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getXKeyword_1_0()); }
	'x'
	{ after(grammarAccess.getOriginAccess().getXKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getXAssignment_1_1()); }
	(rule__Origin__XAssignment_1_1)
	{ after(grammarAccess.getOriginAccess().getXAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_2__0__Impl
	rule__Origin__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYKeyword_2_0()); }
	'y'
	{ after(grammarAccess.getOriginAccess().getYKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYAssignment_2_1()); }
	(rule__Origin__YAssignment_2_1)
	{ after(grammarAccess.getOriginAccess().getYAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_3__0__Impl
	rule__Origin__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getZKeyword_3_0()); }
	'z'
	{ after(grammarAccess.getOriginAccess().getZKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getZAssignment_3_1()); }
	(rule__Origin__ZAssignment_3_1)
	{ after(grammarAccess.getOriginAccess().getZAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_4__0__Impl
	rule__Origin__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getRollKeyword_4_0()); }
	'Roll'
	{ after(grammarAccess.getOriginAccess().getRollKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getRollAssignment_4_1()); }
	(rule__Origin__RollAssignment_4_1)
	{ after(grammarAccess.getOriginAccess().getRollAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_5__0__Impl
	rule__Origin__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getPitchKeyword_5_0()); }
	'Pitch'
	{ after(grammarAccess.getOriginAccess().getPitchKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getPitchAssignment_5_1()); }
	(rule__Origin__PitchAssignment_5_1)
	{ after(grammarAccess.getOriginAccess().getPitchAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Origin__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_6__0__Impl
	rule__Origin__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYawKeyword_6_0()); }
	'Yaw'
	{ after(grammarAccess.getOriginAccess().getYawKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Origin__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginAccess().getYawAssignment_6_1()); }
	(rule__Origin__YawAssignment_6_1)
	{ after(grammarAccess.getOriginAccess().getYawAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassAction_0()); }
	()
	{ after(grammarAccess.getMassAccess().getMassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mass__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMassAccess().getMassKeyword_1()); }
	'Mass'
	{ after(grammarAccess.getMassAccess().getMassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inertia__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__0__Impl
	rule__Inertia__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
	()
	{ after(grammarAccess.getInertiaAccess().getInertiaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inertia__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertia__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInertiaAccess().getInertiaKeyword_1()); }
	'Inertia'
	{ after(grammarAccess.getInertiaAccess().getInertiaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Material_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Material_Impl__Group__0__Impl
	rule__Material_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Material_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaterial_ImplAccess().getMaterialAction_0()); }
	()
	{ after(grammarAccess.getMaterial_ImplAccess().getMaterialAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Material_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Material_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Material_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaterial_ImplAccess().getMaterialKeyword_1()); }
	'Material'
	{ after(grammarAccess.getMaterial_ImplAccess().getMaterialKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry_Impl__Group__0__Impl
	rule__Geometry_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometry_ImplAccess().getGeometryAction_0()); }
	()
	{ after(grammarAccess.getGeometry_ImplAccess().getGeometryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Geometry_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeometry_ImplAccess().getGeometryKeyword_1()); }
	'Geometry'
	{ after(grammarAccess.getGeometry_ImplAccess().getGeometryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getColorAction_0()); }
	()
	{ after(grammarAccess.getColorAccess().getColorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getColorKeyword_1()); }
	'Color'
	{ after(grammarAccess.getColorAccess().getColorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Texture__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__0__Impl
	rule__Texture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getTextureAction_0()); }
	()
	{ after(grammarAccess.getTextureAccess().getTextureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Texture__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Texture__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextureAccess().getTextureKeyword_1()); }
	'Texture'
	{ after(grammarAccess.getTextureAccess().getTextureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxAction_0()); }
	()
	{ after(grammarAccess.getBoxAccess().getBoxAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Box__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoxAccess().getBoxKeyword_1()); }
	'Box'
	{ after(grammarAccess.getBoxAccess().getBoxKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cylinder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__0__Impl
	rule__Cylinder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getCylinderAction_0()); }
	()
	{ after(grammarAccess.getCylinderAccess().getCylinderAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cylinder__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cylinder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCylinderAccess().getCylinderKeyword_1()); }
	'Cylinder'
	{ after(grammarAccess.getCylinderAccess().getCylinderKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mesh__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__0__Impl
	rule__Mesh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getMeshAction_0()); }
	()
	{ after(grammarAccess.getMeshAccess().getMeshAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mesh__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mesh__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeshAccess().getMeshKeyword_1()); }
	'Mesh'
	{ after(grammarAccess.getMeshAccess().getMeshKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sphere__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__0__Impl
	rule__Sphere__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getSphereAction_0()); }
	()
	{ after(grammarAccess.getSphereAccess().getSphereAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sphere__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sphere__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSphereAccess().getSphereKeyword_1()); }
	'Sphere'
	{ after(grammarAccess.getSphereAccess().getSphereKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__0__Impl
	rule__Limit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLimitAction_0()); }
	()
	{ after(grammarAccess.getLimitAccess().getLimitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__1__Impl
	rule__Limit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_1()); }
	(rule__Limit__Group_1__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__2__Impl
	rule__Limit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_2()); }
	(rule__Limit__Group_2__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__3__Impl
	rule__Limit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_3()); }
	(rule__Limit__Group_3__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getGroup_4()); }
	(rule__Limit__Group_4__0)?
	{ after(grammarAccess.getLimitAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_1__0__Impl
	rule__Limit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerKeyword_1_0()); }
	'Lower'
	{ after(grammarAccess.getLimitAccess().getLowerKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getLowerAssignment_1_1()); }
	(rule__Limit__LowerAssignment_1_1)
	{ after(grammarAccess.getLimitAccess().getLowerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_2__0__Impl
	rule__Limit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperKeyword_2_0()); }
	'Upper'
	{ after(grammarAccess.getLimitAccess().getUpperKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getUpperAssignment_2_1()); }
	(rule__Limit__UpperAssignment_2_1)
	{ after(grammarAccess.getLimitAccess().getUpperAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__0__Impl
	rule__Limit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortKeyword_3_0()); }
	'Effort'
	{ after(grammarAccess.getLimitAccess().getEffortKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getEffortAssignment_3_1()); }
	(rule__Limit__EffortAssignment_3_1)
	{ after(grammarAccess.getLimitAccess().getEffortAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Limit__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__0__Impl
	rule__Limit__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityKeyword_4_0()); }
	'Velocity'
	{ after(grammarAccess.getLimitAccess().getVelocityKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Limit__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLimitAccess().getVelocityAssignment_4_1()); }
	(rule__Limit__VelocityAssignment_4_1)
	{ after(grammarAccess.getLimitAccess().getVelocityAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__0__Impl
	rule__Axis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getAxisAction_0()); }
	()
	{ after(grammarAccess.getAxisAccess().getAxisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__1__Impl
	rule__Axis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getGroup_1()); }
	(rule__Axis__Group_1__0)?
	{ after(grammarAccess.getAxisAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__2__Impl
	rule__Axis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getGroup_2()); }
	(rule__Axis__Group_2__0)?
	{ after(grammarAccess.getAxisAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getGroup_3()); }
	(rule__Axis__Group_3__0)?
	{ after(grammarAccess.getAxisAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_1__0__Impl
	rule__Axis__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXKeyword_1_0()); }
	'x'
	{ after(grammarAccess.getAxisAccess().getXKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getXAssignment_1_1()); }
	(rule__Axis__XAssignment_1_1)
	{ after(grammarAccess.getAxisAccess().getXAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_2__0__Impl
	rule__Axis__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getYKeyword_2_0()); }
	'y'
	{ after(grammarAccess.getAxisAccess().getYKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getYAssignment_2_1()); }
	(rule__Axis__YAssignment_2_1)
	{ after(grammarAccess.getAxisAccess().getYAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axis__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_3__0__Impl
	rule__Axis__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getZKeyword_3_0()); }
	'z'
	{ after(grammarAccess.getAxisAccess().getZKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axis__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxisAccess().getZAssignment_3_1()); }
	(rule__Axis__ZAssignment_3_1)
	{ after(grammarAccess.getAxisAccess().getZAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Callibration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Callibration__Group__0__Impl
	rule__Callibration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallibrationAccess().getCallibrationAction_0()); }
	()
	{ after(grammarAccess.getCallibrationAccess().getCallibrationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Callibration__Group__1__Impl
	rule__Callibration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallibrationAccess().getGroup_1()); }
	(rule__Callibration__Group_1__0)?
	{ after(grammarAccess.getCallibrationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Callibration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallibrationAccess().getGroup_2()); }
	(rule__Callibration__Group_2__0)?
	{ after(grammarAccess.getCallibrationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Callibration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Callibration__Group_1__0__Impl
	rule__Callibration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallibrationAccess().getRisingKeyword_1_0()); }
	'Rising'
	{ after(grammarAccess.getCallibrationAccess().getRisingKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Callibration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallibrationAccess().getRisingAssignment_1_1()); }
	(rule__Callibration__RisingAssignment_1_1)
	{ after(grammarAccess.getCallibrationAccess().getRisingAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Callibration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Callibration__Group_2__0__Impl
	rule__Callibration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallibrationAccess().getFallingKeyword_2_0()); }
	'Falling'
	{ after(grammarAccess.getCallibrationAccess().getFallingKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Callibration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallibrationAccess().getFallingAssignment_2_1()); }
	(rule__Callibration__FallingAssignment_2_1)
	{ after(grammarAccess.getCallibrationAccess().getFallingAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__0__Impl
	rule__Dynamics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDynamicsAction_0()); }
	()
	{ after(grammarAccess.getDynamicsAccess().getDynamicsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__1__Impl
	rule__Dynamics__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getGroup_1()); }
	(rule__Dynamics__Group_1__0)?
	{ after(grammarAccess.getDynamicsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getGroup_2()); }
	(rule__Dynamics__Group_2__0)?
	{ after(grammarAccess.getDynamicsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_1__0__Impl
	rule__Dynamics__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getFrictionKeyword_1_0()); }
	'Friction'
	{ after(grammarAccess.getDynamicsAccess().getFrictionKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getFrictionAssignment_1_1()); }
	(rule__Dynamics__FrictionAssignment_1_1)
	{ after(grammarAccess.getDynamicsAccess().getFrictionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamics__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_2__0__Impl
	rule__Dynamics__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDampingKeyword_2_0()); }
	'Damping'
	{ after(grammarAccess.getDynamicsAccess().getDampingKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamics__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamicsAccess().getDampingAssignment_2_1()); }
	(rule__Dynamics__DampingAssignment_2_1)
	{ after(grammarAccess.getDynamicsAccess().getDampingAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mimic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__0__Impl
	rule__Mimic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getMimicAction_0()); }
	()
	{ after(grammarAccess.getMimicAccess().getMimicAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__1__Impl
	rule__Mimic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getGroup_1()); }
	(rule__Mimic__Group_1__0)?
	{ after(grammarAccess.getMimicAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__2__Impl
	rule__Mimic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getGroup_2()); }
	(rule__Mimic__Group_2__0)?
	{ after(grammarAccess.getMimicAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getGroup_3()); }
	(rule__Mimic__Group_3__0)?
	{ after(grammarAccess.getMimicAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mimic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_1__0__Impl
	rule__Mimic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getJointKeyword_1_0()); }
	'Joint'
	{ after(grammarAccess.getMimicAccess().getJointKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getJointAssignment_1_1()); }
	(rule__Mimic__JointAssignment_1_1)
	{ after(grammarAccess.getMimicAccess().getJointAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mimic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_2__0__Impl
	rule__Mimic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getMultiplierKeyword_2_0()); }
	'Multiplier'
	{ after(grammarAccess.getMimicAccess().getMultiplierKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getMultiplierAssignment_2_1()); }
	(rule__Mimic__MultiplierAssignment_2_1)
	{ after(grammarAccess.getMimicAccess().getMultiplierAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mimic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_3__0__Impl
	rule__Mimic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getOffSetKeyword_3_0()); }
	'OffSet'
	{ after(grammarAccess.getMimicAccess().getOffSetKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mimic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMimicAccess().getOffSetAssignment_3_1()); }
	(rule__Mimic__OffSetAssignment_3_1)
	{ after(grammarAccess.getMimicAccess().getOffSetAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__0__Impl
	rule__SafetyController__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSafetyControllerAction_0()); }
	()
	{ after(grammarAccess.getSafetyControllerAccess().getSafetyControllerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__1__Impl
	rule__SafetyController__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_1()); }
	(rule__SafetyController__Group_1__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__2__Impl
	rule__SafetyController__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_2()); }
	(rule__SafetyController__Group_2__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__3__Impl
	rule__SafetyController__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_3()); }
	(rule__SafetyController__Group_3__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getGroup_4()); }
	(rule__SafetyController__Group_4__0)?
	{ after(grammarAccess.getSafetyControllerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_1__0__Impl
	rule__SafetyController__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_1_0()); }
	'SoftLowerLimit'
	{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_1_1()); }
	(rule__SafetyController__SoftLowerLimitAssignment_1_1)
	{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_2__0__Impl
	rule__SafetyController__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_2_0()); }
	'SoftUpperLimit'
	{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_2_1()); }
	(rule__SafetyController__SoftUpperLimitAssignment_2_1)
	{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_3__0__Impl
	rule__SafetyController__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_positionKeyword_3_0()); }
	'k_position'
	{ after(grammarAccess.getSafetyControllerAccess().getK_positionKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_3_1()); }
	(rule__SafetyController__K_positionAssignment_3_1)
	{ after(grammarAccess.getSafetyControllerAccess().getK_positionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SafetyController__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_4__0__Impl
	rule__SafetyController__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_4_0()); }
	'k_velocity'
	{ after(grammarAccess.getSafetyControllerAccess().getK_velocityKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SafetyController__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_4_1()); }
	(rule__SafetyController__K_velocityAssignment_4_1)
	{ after(grammarAccess.getSafetyControllerAccess().getK_velocityAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRobotAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__LinkAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_2_0()); }
		ruleLink
		{ after(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__LinkAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_3_1_0()); }
		ruleLink
		{ after(grammarAccess.getRobotAccess().getLinkLinkParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__JointAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getJointJointParserRuleCall_4_0_0()); }
		ruleJoint
		{ after(grammarAccess.getRobotAccess().getJointJointParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__JointAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getJointJointParserRuleCall_4_1_0()); }
		ruleJoint
		{ after(grammarAccess.getRobotAccess().getJointJointParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__InertialAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_1_0()); }
		ruleInertial
		{ after(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__InertialAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_2_0()); }
		ruleInertial
		{ after(grammarAccess.getLinkAccess().getInertialInertialParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__VisualsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_4_1_0()); }
		ruleVisual
		{ after(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__VisualsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_4_2_0()); }
		ruleVisual
		{ after(grammarAccess.getLinkAccess().getVisualsVisualParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__CollisionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_5_1_0()); }
		ruleCollision
		{ after(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__CollisionAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_5_2_0()); }
		ruleCollision
		{ after(grammarAccess.getLinkAccess().getCollisionCollisionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_2_1_0()); }
		ruleJointType
		{ after(grammarAccess.getJointAccess().getTypeJointTypeEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ChildOfAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getChildOfLinkCrossReference_4_0()); }
		(
			{ before(grammarAccess.getJointAccess().getChildOfLinkSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getJointAccess().getChildOfLinkSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getChildOfLinkCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__ParentOfAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getParentOfLinkCrossReference_6_0()); }
		(
			{ before(grammarAccess.getJointAccess().getParentOfLinkSTRINGTerminalRuleCall_6_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getJointAccess().getParentOfLinkSTRINGTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getJointAccess().getParentOfLinkCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__LimitAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_7_1_0()); }
		ruleLimit
		{ after(grammarAccess.getJointAccess().getLimitLimitParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__AxisAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_8_1_0()); }
		ruleAxis
		{ after(grammarAccess.getJointAccess().getAxisAxisParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__OriginAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getOriginOriginParserRuleCall_10_0()); }
		ruleOrigin
		{ after(grammarAccess.getJointAccess().getOriginOriginParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__CallibrationAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getCallibrationCallibrationParserRuleCall_11_1_0()); }
		ruleCallibration
		{ after(grammarAccess.getJointAccess().getCallibrationCallibrationParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__DynamicsAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getDynamicsDynamicsParserRuleCall_12_1_0()); }
		ruleDynamics
		{ after(grammarAccess.getJointAccess().getDynamicsDynamicsParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__MimicAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getMimicMimicParserRuleCall_13_1_0()); }
		ruleMimic
		{ after(grammarAccess.getJointAccess().getMimicMimicParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__SafetycontrollerAssignment_14_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJointAccess().getSafetycontrollerSafetyControllerParserRuleCall_14_1_0()); }
		ruleSafetyController
		{ after(grammarAccess.getJointAccess().getSafetycontrollerSafetyControllerParserRuleCall_14_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__OriginAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_1_0()); }
		ruleOrigin
		{ after(grammarAccess.getInertialAccess().getOriginOriginParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__MassAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getMassMassParserRuleCall_2_1_0()); }
		ruleMass
		{ after(grammarAccess.getInertialAccess().getMassMassParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__MassAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getMassMassParserRuleCall_2_2_1_0()); }
		ruleMass
		{ after(grammarAccess.getInertialAccess().getMassMassParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__InertiaAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_1_0()); }
		ruleInertia
		{ after(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inertial__InertiaAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_2_0()); }
		ruleInertia
		{ after(grammarAccess.getInertialAccess().getInertiaInertiaParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__MaterialAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getMaterialMaterialParserRuleCall_0_1_0()); }
		ruleMaterial
		{ after(grammarAccess.getVisualAccess().getMaterialMaterialParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__OriginAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_2_0()); }
		ruleOrigin
		{ after(grammarAccess.getVisualAccess().getOriginOriginParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visual__GeometryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_0()); }
		ruleGeometry
		{ after(grammarAccess.getVisualAccess().getGeometryGeometryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__GeometryAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_1_0()); }
		ruleGeometry
		{ after(grammarAccess.getCollisionAccess().getGeometryGeometryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collision__OriginAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_3_0()); }
		ruleOrigin
		{ after(grammarAccess.getCollisionAccess().getOriginOriginParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__XAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getXINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOriginAccess().getXINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__YAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getYINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOriginAccess().getYINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__ZAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getZINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOriginAccess().getZINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__RollAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getRollINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOriginAccess().getRollINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__PitchAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getPitchINTTerminalRuleCall_5_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOriginAccess().getPitchINTTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Origin__YawAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOriginAccess().getYawINTTerminalRuleCall_6_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOriginAccess().getYawINTTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__LowerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getLowerINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLimitAccess().getLowerINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__UpperAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getUpperINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLimitAccess().getUpperINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__EffortAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getEffortINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLimitAccess().getEffortINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Limit__VelocityAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLimitAccess().getVelocityINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLimitAccess().getVelocityINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__XAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getXINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAxisAccess().getXINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__YAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getYINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAxisAccess().getYINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__ZAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getZINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAxisAccess().getZINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__RisingAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallibrationAccess().getRisingSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCallibrationAccess().getRisingSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Callibration__FallingAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallibrationAccess().getFallingSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCallibrationAccess().getFallingSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__FrictionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getFrictionINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDynamicsAccess().getFrictionINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamics__DampingAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicsAccess().getDampingINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDynamicsAccess().getDampingINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__JointAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMimicAccess().getJointSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMimicAccess().getJointSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__MultiplierAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMimicAccess().getMultiplierINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMimicAccess().getMultiplierINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mimic__OffSetAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMimicAccess().getOffSetINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMimicAccess().getOffSetINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__SoftLowerLimitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSafetyControllerAccess().getSoftLowerLimitINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__SoftUpperLimitAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSafetyControllerAccess().getSoftUpperLimitINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__K_positionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getK_positionINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSafetyControllerAccess().getK_positionINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SafetyController__K_velocityAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyControllerAccess().getK_velocityINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSafetyControllerAccess().getK_velocityINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
